{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribePanel.js","common/StatisticBlock.js","common/StatisticPanel.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","PanelHeader","noShadow","PanelHeaderContent","aside","dropdown_default","onClick","HeaderContext","onClose","List","Cell","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","imageLoading","click","clickButton","imageFinishLoad","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","prevProps","prevState","snapshot","resize","status","switching","Spinner","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","fire_default","Button","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","onLoad","map","item","show_vk","Link","href","vk_link","target","key","creator_id","nickname","reduce","prev","curr","component","SubscribePanel","subscribeTitles","loading","searchUpdate","returnClear","sendClearRequest","setTimeout","clear","toLowerCase","indexOf","currentTarget","dataset","titles","clearDisplay","id","paddingTop","paddingBottom","FixedLayout","vertical","Tabs","TabsItem","after","list_default","selected","recent_default","Search","theme","onChange","PanelSpinner","length","common_SubscribeBlock","Div","color","marginTop","dateFormat","StatisticBlock","statDataAdded","statDataRemoved","statDataDate","statSubViews","statDubViews","statViewsPoints","statistic","added","removed","axis","stat","forEach","i","arr","Date","parse","date","view_points","sub_views","sub_view","num","view","includes","reverse","dub_views","dub_view","sort","b","Progress","value","total","maxVotes","Counter","sub","dub","minHeight","flexDirection","react_apexcharts_min_default","series","name","options","chart","background","foreColor","defaultLocale","toolbar","show","animations","enabled","title","text","align","margin","dataLabels","tooltip","shared","marker","labels","stroke","curve","xaxis","showDuplicates","yaxis","tickAmount","min","max","hideOverlappingLabels","forceNiceScale","StatisticPanel","minimumId","statData","loader","Array","isArray","common_StatisticBlock","App","params","queryString","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","urlData","popout","selectScreen","resizeVkIframe","switchSubscribeStatus","getSubscribeList","clearSubscriptions","clearSubscriptionsLaunch","closePopout","getStatistic","hash","stringify","document","getElementById","scrollHeight","method","body","titleId","returnFnc","Alert","actions","autoclose","action","titleType","Root","activeView","View","activePanel","Panel","common_Header","common_SubscribePanel","common_StatisticPanel","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.0e2df939.chunk.js","sourcesContent":["import Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport HeaderContext from \"@vkontakte/vkui/dist/components/HeaderContext/HeaderContext\";\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\r\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\r\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader noShadow>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления' : null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика' : null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон' : null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n\r\n        } else {\r\n            return (<PanelHeader noShadow>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vk-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://shikimori.one/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica.com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink: '',\r\n            titleSiteLink: '',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n            imageLoading: true,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n        this.imageFinishLoad = this.imageFinishLoad.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres = [];\r\n            for (let el in json.genres) {\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc: json.description_html.replace(/<[^>]*>/gm, ''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try {\r\n            e.stopPropagation();\r\n        } catch (ex) {\r\n        }\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type);\r\n            if (resp.error_code === 0) {\r\n                if(this.props.mode=='current'){\r\n                    switch (type) {\r\n                        case 0:\r\n                            if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                                this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                                this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n                    switch(type){\r\n                        case 0:\r\n                            this.setState({subStatus:-1, subSwitching:false});\r\n                            break;\r\n                        case 1:\r\n                            this.setState({dubStatus:-1, dubSwitching:false});\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            } else if (resp.error_code === 7) {\r\n                connect.subscribe((e) => {\r\n                    switch (e.detail.type) {\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if (e.detail.data.result) {\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    imageFinishLoad() {\r\n        this.props.resize();\r\n        this.setState({imageLoading: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{(this.state.priority >= 10000) ?\r\n                                <Icon12Fire fill={\"#f93522\"}\r\n                                            className=\"fullTextInformationIconFire\"/> : null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                            <div className=\"subscribeRowButtonContainer\">\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 0)}\r\n                                        className=\"subscribeRowButton\">Субтитры</Button>\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 1)}\r\n                                        className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                    <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                    </div>\r\n                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"space-around\"}}>\r\n                        {this.state.shikiResp === undefined &&\r\n                        <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                        <div className=\"fullTitleInformationContainer\"\r\n                             style={{\"display\": (this.state.shikiResp === undefined) ? \"none\" : null}}>\r\n\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                {this.state.imageLoading && <Spinner size=\"large\"/>}\r\n                                <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"\r\n                                     onLoad={this.imageFinishLoad}/>\r\n                            </div>\r\n                            <div className=\"fullTitleInformationContent\">\r\n                                {this.state.titleDesc !== '' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                {this.state.titleDesc !== '' && <hr/>}\r\n                                {this.state.titleGenres !== '' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                {this.state.titleGenres !== '' && <hr/>}\r\n                                {this.state.translators != null &&\r\n                                <div><b>Переводчики: </b>{this.state.translators.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"t_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.editors != null && <div><b>Редакторы: </b>{this.state.editors.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"e_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.dubbers != null && <div><b>Дабберы: </b>{this.state.dubbers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"d_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.timers != null && <div><b>Таймеры: </b>{this.state.timers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"tm_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {(this.state.translators != null || this.state.editors != null || this.state.dubbers != null || this.state.timers != null) &&\r\n                                <hr/>}\r\n                                <div className=\"fullTitleInformationContentButton\">\r\n                                    <Button stretched href={this.state.titleShikimoriLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Shikimori</Button>\r\n                                    <Button stretched href={this.state.titleSiteLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Сайт</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport SubscribeBlock from \"./SubscribeBlock\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\nimport Icon24List from '@vkontakte/icons/dist/24/list';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\n\r\n\r\nclass SubscribePanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscribeTitles: [],\r\n            loading: true,\r\n            mode: \"current\",\r\n        };\r\n        this.searchUpdate = this.searchUpdate.bind(this);\r\n        this.switch = this.switch.bind(this);\r\n        this.returnClear = this.returnClear.bind(this);\r\n        this.sendClearRequest = this.sendClearRequest.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({subscribeTitles: await this.props.subscribe(), loading: false});\r\n        //this.resizeVkIframe();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(), 100);\r\n    }\r\n\r\n    async returnClear(){\r\n        await this.props.clear();\r\n        this.setState({subscribeTitles: [], loading: true})\r\n        this.setState({subscribeTitles: await this.props.subscribe(this.state.mode), loading: false});\r\n    }\r\n\r\n    searchUpdate(e) {\r\n        for (let el in this.state.subscribeTitles) {\r\n            if (this.state.subscribeTitles[el].anime_name.toLowerCase().indexOf(e.toLowerCase()) !== -1 || this.state.subscribeTitles[el].anime_name_rus.toLowerCase().indexOf(e.toLowerCase()) !== -1) {\r\n                this.state.subscribeTitles[el].showed = true;\r\n            } else {\r\n                this.state.subscribeTitles[el].showed = false;\r\n            }\r\n            this.setState({subscribeTitles: this.state.subscribeTitles});\r\n        }\r\n    }\r\n\r\n    async switch(e) {\r\n        this.setState({loading: true, mode: e.currentTarget.dataset.mode, subscribeTitles: []});\r\n        let titles = await this.props.subscribe(e.currentTarget.dataset.mode);\r\n        this.setState({subscribeTitles: titles, loading: false});\r\n    }\r\n\r\n    sendClearRequest(){\r\n        this.props.clearDisplay(this.returnClear);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"subscribe_size\"\r\n                 style={{\r\n                     \"paddingTop\": (this.props.client === 'desktop_web') ? \"50px\" : \"60px\",\r\n                     \"paddingBottom\": (this.props.client === 'desktop_web') ? \"0px\" : \"60px\"\r\n                 }}>\r\n                {this.props.client === 'desktop_web' ? <FixedLayout vertical=\"top\">\r\n                    <Tabs>\r\n                        <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                  onClick={this.switch}>Основной</TabsItem>\r\n                        <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                  onClick={this.switch}>Устаревший</TabsItem>\r\n                    </Tabs>\r\n                </FixedLayout> : null}\r\n\r\n                {this.props.client === 'desktop_web' ?\r\n                    <Search className=\"Search--web\" theme=\"default\" onChange={this.searchUpdate}/> :\r\n                    <FixedLayout vertical=\"top\"><Search theme=\"default\" onChange={this.searchUpdate}/></FixedLayout>}\r\n                {this.state.loading && <PanelSpinner size=\"large\"/>}\r\n                {this.state.subscribeTitles.length > 0 && this.state.subscribeTitles.map(item => (\r\n                    (item.showed) ?\r\n                        <SubscribeBlock anime={item} switch={this.props.switch}\r\n                                        key={\"sub_\" + item.anime_id} resize={this.props.resize}\r\n                                        mode={this.state.mode}/> :\r\n                        null\r\n\r\n                ))}\r\n                {(this.state.subscribeTitles.length === 0 && !this.state.loading) && <Div style={{\r\n                    \"color\": \"var(--accent)\",\r\n                    \"justifyContent\": \"space-around\",\r\n                    \"width\": \"100%\",\r\n                    \"display\": \"flex\"\r\n                }}>Отсутствуют аниме</Div>}\r\n                {!this.state.loading &&\r\n                <Div style={{\"color\":\"var(--accent)\",\"justifyContent\":\"space-around\", \"display\":\"flex\", \"marginTop\":\"15px\"}}>\r\n                    <Button stretched style={{\"height\":\"40px\"}} onClick={this.sendClearRequest}>Отписаться от всех рассылок</Button>\r\n                </Div>\r\n                }\r\n                {this.props.client !== 'desktop_web' ?\r\n                    <FixedLayout vertical=\"bottom\">\r\n                        <Tabs>\r\n                            <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                      onClick={this.switch}>Основной</TabsItem>\r\n                            <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                      onClick={this.switch}>Устаревший</TabsItem>\r\n                        </Tabs>\r\n                    </FixedLayout>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubscribePanel;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Chart from 'react-apexcharts';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\r\n\r\nvar dateFormat = require('dateformat');\r\n\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            opened: false,\r\n            statDataAdded: undefined,\r\n            statDataRemoved: undefined,\r\n            statDataDate: undefined,\r\n            statSubViews: undefined,\r\n            statDubViews: undefined,\r\n            statViewsPoints:undefined\r\n        };\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened) {\r\n            this.setState({statDataAdded: undefined, statDataRemoved: undefined, statDataDate: undefined})\r\n            let json = await this.props.statistic(this.props.data.anime_id);\r\n            let added = [];\r\n            let removed = [];\r\n            let axis = [];\r\n            json.stat.forEach(function (item, i, arr) {\r\n                added.push(item.added);\r\n                removed.push(item.removed);\r\n                axis.push(dateFormat(Date.parse(item.date), \"dd.mm\"));\r\n            });\r\n            let view_points = [];\r\n            let sub_views = [];\r\n            json.sub_view.forEach(function (item, i, arr) {\r\n                sub_views.push([item.num,item.view]);\r\n                if (!view_points.includes(item.num)){\r\n                    view_points.push(item.num);\r\n                }\r\n            });\r\n            sub_views.reverse();\r\n            let dub_views = [];\r\n            json.dub_view.forEach(function (item, i, arr) {\r\n                dub_views.push([item.num,item.view]);\r\n                if (!view_points.includes(item.num)){\r\n                    view_points.push(item.num);\r\n                }\r\n            });\r\n            dub_views.reverse();\r\n            view_points.sort(function(a,b){return a - b;});\r\n            console.log(view_points);\r\n            this.setState({\r\n                statDataAdded: added,\r\n                statDataRemoved: removed,\r\n                statDataDate: axis,\r\n                statSubViews: sub_views,\r\n                statDubViews: dub_views,\r\n                statViewsPoints: view_points\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\" + this.props.data.anime_id}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{this.props.data.anime_name}</div>\r\n                            <div className=\"statisticRowProgressContainer\">\r\n                                <Progress value={100 * this.props.data.total / this.props.maxVotes}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <Counter type=\"primary\">{this.props.data.sub}</Counter>\r\n                        <Counter>{this.props.data.dub}</Counter>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\"\r\n                     style={{\"display\": (this.state.opened) ? \"flex\" : \"none\", \"minHeight\": \"10px\", \"flexDirection\":\"column\"}}>\r\n                    {this.state.statDataAdded === undefined && this.state.statDataRemoved === undefined &&\r\n                    <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                    {this.state.statDataAdded !== undefined && this.state.statDataRemoved !== undefined &&\r\n                    <Chart type=\"line\" width=\"100%\" height=\"250px\" series={[\r\n                        {name: \"Подписались\", data: this.state.statDataAdded},\r\n                        {name: \"Отписались\", data: this.state.statDataRemoved},\r\n                    ]}\r\n                           options={{\r\n                               chart: {\r\n                                   background: \"var(--background_light)\",\r\n                                   foreColor: \"var(--accent)\",\r\n                                   defaultLocale: \"en\",\r\n\r\n                                   toolbar: {\r\n                                       show: false\r\n                                   },\r\n                                   animations: {\r\n                                       enabled: false\r\n                                   }\r\n                               },\r\n                               title:{\r\n                                   text:\"Динамика подписок\",\r\n                                   align:\"center\",\r\n                                   margin: 0\r\n                               },\r\n                               dataLabels: {\r\n                                   enabled: true,\r\n                               },\r\n                               tooltip: {\r\n                                   enabled: false,\r\n                                   shared: false,\r\n                                   marker: {\r\n                                       show: false\r\n                                   }\r\n                               },\r\n                               labels: this.state.statDataDate,\r\n                               stroke: {\r\n                                   curve: 'smooth',\r\n                                   width: '2'\r\n                               },\r\n                               xaxis: {\r\n                                   //type:'datetime',\r\n                                   labels: {\r\n                                       showDuplicates: true\r\n                                   },\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n\r\n                               },\r\n                               yaxis: {\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   }\r\n                               }\r\n                           }}\r\n                    />}\r\n                    { ((this.state.statSubViews !== undefined && this.state.statSubViews.length>0) || (this.state.statDubViews !== undefined && this.state.statDubViews.length>0)) &&\r\n\r\n                    <Chart type=\"line\" width=\"100%\" height=\"250px\"\r\n                           series={[\r\n                               {name:\"Субтитры\", data: this.state.statSubViews},\r\n                               {name:\"Озвучка\", data: this.state.statDubViews},\r\n                           ]}\r\n                           options={{\r\n                               chart: {\r\n                                   background: \"var(--background_light)\",\r\n                                   foreColor: \"var(--accent)\",\r\n                                   defaultLocale: \"en\",\r\n\r\n                                   toolbar: {\r\n                                       show: false\r\n                                   },\r\n                                   animations: {\r\n                                       enabled: false\r\n                                   }\r\n                               },\r\n                               title:{\r\n                                    text:\"Просмотры сайт\",\r\n                                    align:\"center\",\r\n                                    margin: 0\r\n                               },\r\n                               tooltip: {\r\n                                   enabled: false,\r\n                                   shared: false,\r\n                                   marker: {\r\n                                       show: false\r\n                                   }\r\n                               },\r\n                               stroke: {\r\n                                   curve: 'smooth',\r\n                                   width: '2'\r\n                               },\r\n                               //labels:this.state.statViewsPoints,\r\n                               xaxis: {\r\n                                   type:\"category\",\r\n                                   tickAmount:this.state.statViewsPoints[this.state.statViewsPoints.length-1]-this.state.statViewsPoints[0],\r\n                                   min:this.state.statViewsPoints[0],\r\n                                   max:this.state.statViewsPoints[this.state.statViewsPoints.length-1],\r\n                                   labels: {\r\n                                       show: true,\r\n                                       showDuplicates: true,\r\n                                       hideOverlappingLabels: false\r\n                                   },\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n                                   forceNiceScale: true\r\n                               },\r\n                               yaxis: {\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n                                   min: 0,\r\n                                   forceNiceScale: true\r\n                               }\r\n                           }}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport StatisticBlock from \"./StatisticBlock\";\r\nclass StatisticPanel extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize,300);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"} key={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner size=\"large\"/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <StatisticBlock key={\"sb_\"+item.anime_id} data={item} maxVotes={this.state.maxVotes} resize={this.props.resize} statistic={this.props.statistic}/>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticPanel","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport SubscribePanel from './common/SubscribePanel'\nimport connect from '@vkontakte/vkui-connect'\nimport StatisticPanel from \"./common/StatisticPanel\";\nimport Alert from \"@vkontakte/vkui/dist/components/Alert/Alert\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\nconst reqStatisticTitleUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/title/%s';\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get';\nconst reqSubscribeOldList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get/old';\nconst reqSubscribeClear = 'https://api.sovetromantica.com/api/v1/notify/vkapp/clear';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            urlData: data,\n            popout: null,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n        this.switchSubscribeStatus = this.switchSubscribeStatus.bind(this);\n        this.getSubscribeList = this.getSubscribeList.bind(this);\n        this.clearSubscriptions = this.clearSubscriptions.bind(this);\n        this.clearSubscriptionsLaunch = this.clearSubscriptionsLaunch.bind(this);\n        this.closePopout = this.closePopout.bind(this);\n        this.getStatistic = this.getStatistic.bind(this);\n\n        this.height = 0;\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            if (hash.mode === 'subscribe' || hash.mode === 'statistic_full' || hash.mode === 'statistic_cur') {\n                this.state.mode = hash.mode;\n            }\n\n        }\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            hash.mode = e.currentTarget.dataset.mode;\n            connect.send(\"VKWebAppSetLocation\", {\"location\": queryString.stringify(hash)});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.resizeVkIframe();\n    }\n\n    componentDidMount() {\n        this.resizeVkIframe();\n    }\n\n\n    resizeVkIframe() {\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode + \"_size\").scrollHeight + 110;\n            if (this.height !== height) {\n                this.height = height;\n                connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\": height});\n            }\n\n        }\n    }\n\n    async getSubscribeList(type = 'current') {\n        let resp = await fetch((type === 'current') ? reqSubscribeList : reqSubscribeOldList, {\n            method: 'POST',\n            body: this.state.urlData\n        });\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        return json;\n        //this.resizeVkIframe();\n    }\n\n    async getStatistic(titleId = 0) {\n        if(titleId===0){\n            return undefined;\n        }\n        let resp = await fetch(sprintf(reqStatisticTitleUrl, titleId), {\n            method: 'POST',\n            body: this.state.urlData\n        });\n        return await resp.json();\n    }\n\n    async clearSubscriptions() {\n        await fetch(reqSubscribeClear, {method: 'POST', body: this.state.urlData});\n    }\n\n    clearSubscriptionsLaunch(returnFnc) {\n        this.setState({\n            popout:\n                <Alert actions={[\n                    {\n                        title: \"Удалить\",\n                        autoclose: true,\n                        style: \"destructive\",\n                        action:returnFnc\n                    },\n                    {\n                        title: \"Отмена\",\n                        autoclose: true,\n                        style: \"cancel\"\n                    }]}\n                onClose={this.closePopout}>\n                    <h2>Подтвердите действие</h2>\n                    <p>Вы уверены, что хотите удалить все уведомления? <br/>Будут удалены все текущие, а также старые подписки. <br/>Вы перестаните получать уведомления о новых сериях.</p>\n                </Alert>\n        })\n    }\n\n    closePopout(e){\n        console.log(e);\n        this.setState({popout: null});\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode} popout={this.state.popout}>\n\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode=\"subscribe\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n\n                        <SubscribePanel switch={this.switchSubscribeStatus} resize={this.resizeVkIframe}\n                                        subscribe={this.getSubscribeList} client={this.state.clientType}\n                                        rights={this.state.rights} clearDisplay={this.clearSubscriptionsLaunch} clear={this.clearSubscriptions}/>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode=\"statistic_full\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe} statistic={this.getStatistic}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode=\"statistic_cur\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"939\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe} statistic={this.getStatistic}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}