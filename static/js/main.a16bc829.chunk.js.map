{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/StatisticBlock.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","dist_vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","click","clickButton","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","resize","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","status","switching","Spinner_default","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","Button_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","map","item","show_vk","Link_default","href","vk_link","key","creator_id","nickname","reduce","prev","curr","component","StatisticBlock","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","id","PanelSpinner_default","Progress_default","value","Counter_default","sub","dub","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","subscribeTitles","urlData","loading","selectScreen","resizeVkIframe","currentTarget","dataset","prevProps","prevState","snapshot","setTimeout","document","getElementById","scrollHeight","method","body","titleId","titleType","Root_default","activeView","View_default","activePanel","Panel_default","common_Header","common_SubscribeBlock","switchSubscribeStatus","common_StatisticBlock","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.a16bc829.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления':null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика':null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон':null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica/com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink:'',\r\n            titleSiteLink:'',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        await this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres=[];\r\n            for (let el in json.genres){\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            await this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc:json.description_html.replace(/<[^>]*>/gm,''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n        }\r\n        this.props.resize();\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try{\r\n            e.stopPropagation();\r\n        } catch(ex){}\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n            else if (resp.error_code===7){\r\n                connect.subscribe((e)=>{\r\n                    switch(e.detail.type){\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if(e.detail.data.result){\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            }\r\n            else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                        <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                        </div>\r\n                        <div style={{\"width\":\"100%\",\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\r\n                            {this.state.shikiResp===undefined && <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                            <div className=\"fullTitleInformationContainer\" style={{\"display\":(this.state.shikiResp===undefined)?\"none\":null}}>\r\n\r\n                                <div className=\"fullTitleInformationImage\" >\r\n                                    <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"/>\r\n                                </div>\r\n                                <div className=\"fullTitleInformationContent\">\r\n                                    {this.state.titleDesc!=='' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                    {this.state.titleDesc!=='' && <hr/>}\r\n                                    {this.state.titleGenres!=='' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                    {this.state.titleGenres!=='' && <hr/>}\r\n                                    {this.state.translators!=null && <div><b>Переводчики: </b>{this.state.translators.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"t_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.editors!=null && <div><b>Редакторы: </b>{this.state.editors.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"e_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.dubbers!=null && <div><b>Дабберы: </b>{this.state.dubbers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"d_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.timers!=null && <div><b>Таймеры: </b>{this.state.timers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"tm_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {(this.state.translators!=null || this.state.editors!=null || this.state.dubbers!=null || this.state.timers!=null) && <hr/>}\r\n                                    <div className=\"fullTitleInformationContentButton\">\r\n                                        <Button stretched href={this.state.titleShikimoriLink} component=\"a\" className=\"subscribeRowButton\">Shikimori</Button>\r\n                                        <Button stretched href={this.state.titleSiteLink} component=\"a\" className=\"subscribeRowButton\">Сайт</Button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n        //this.props.resize();\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\"+item.anime_id}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Counter type=\"primary\">{item.sub}</Counter>\r\n                            <Counter>{item.dub}</Counter>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport StatisticBlock from \"./common/StatisticBlock\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            subscribeTitles: [],\n            urlData: data,\n            loading: true,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n\n\n\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        //setTimeout(this.resizeVkIframe,1000)\n        ;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        setTimeout(this.resizeVkIframe,800)\n    }\n\n\n\n    resizeVkIframe(){\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode+\"_size\").scrollHeight+50;\n            connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\":height });\n        }\n    }\n\n    async componentDidMount() {\n        let resp = await fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        await this.setState({subscribeTitles: json, loading: false});\n        this.resizeVkIframe();\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode}>\n\n                    <Panel id=\"subscribe\">\n                        {this.state.loading && <PanelSpinner/>}\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <div id=\"subscribe_size\">\n                        {this.state.subscribeTitles.map(item => (\n                            (this.state.clientType !== 'desktop_web') ?\n                                <SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)} key={\"sub_\"+item.anime_id}  resize={this.resizeVkIframe} /> :\n                                <SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)} key={\"sub_\"+item.anime_id}  resize={this.resizeVkIframe} />\n\n                        ))}\n                        </div>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode} resize={this.resizeVkIframe}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"797\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode} resize={this.resizeVkIframe}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}