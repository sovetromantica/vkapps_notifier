{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribeBlockMobile.js","common/StatisticBlock.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","click","clickButton","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","status","switching","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","map","item","show_vk","href","vk_link","nickname","reduce","prev","curr","component","StatisticBlock","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","value","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","subscribeTitles","urlData","loading","selectScreen","currentTarget","dataset","method","body","then","titleId","titleType","activeView","id","activePanel","common_Header","common_SubscribeBlock","switchSubscribeStatus","common_StatisticBlock","loadStatistic","Boolean","hostname","match","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.3135f091.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent, Tabs, TabsItem, Group} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        Уведомления\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Статистика текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    Link\r\n\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica/com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink:'',\r\n            titleSiteLink:'',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres=[];\r\n            for (let el in json.genres){\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc:json.description_html.replace(/<[^>]*>/gm,''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n        }\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try{\r\n            e.stopPropagation();\r\n        } catch(ex){}\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n            else if (resp.error_code===7){\r\n                connect.subscribe((e)=>{\r\n                    switch(e.detail.type){\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if(e.detail.data.result){\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            }\r\n            else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                        <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                        </div>\r\n                        <div style={{\"width\":\"100%\",\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\r\n                            {this.state.shikiResp===undefined && <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                            <div className=\"fullTitleInformationContainer\" style={{\"display\":(this.state.shikiResp===undefined)?\"none\":null}}>\r\n\r\n                                <div className=\"fullTitleInformationImage\" >\r\n                                    <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"/>\r\n                                </div>\r\n                                <div className=\"fullTitleInformationContent\">\r\n                                    {this.state.titleDesc!=='' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                    {this.state.titleDesc!=='' && <hr/>}\r\n                                    {this.state.titleGenres!=='' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                    {this.state.titleGenres!=='' && <hr/>}\r\n                                    {this.state.translators!=null && <div><b>Переводчики: </b>{this.state.translators.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.editors!=null && <div><b>Редакторы: </b>{this.state.editors.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.dubbers!=null && <div><b>Дабберы: </b>{this.state.dubbers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.timers!=null && <div><b>Таймеры: </b>{this.state.timers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {(this.state.translators!=null || this.state.editors!=null || this.state.dubbers!=null || this.state.timers!=null) && <hr/>}\r\n                                    <div className=\"fullTitleInformationContentButton\">\r\n                                        <Button stretched href={this.state.titleShikimoriLink} component=\"a\" className=\"subscribeRowButton\">Shikimori</Button>\r\n                                        <Button stretched href={this.state.titleSiteLink} component=\"a\" className=\"subscribeRowButton\">Сайт</Button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport {\r\n    Button,\r\n    Spinner\r\n\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport '../css/main.css';\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\n\r\nclass SubscribeBlockMobile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false\r\n        };\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            this.setState({shikiResp: json});\r\n            console.log(1);\r\n            //Image.prefetch(json.image.original);\r\n            console.log(2);\r\n            console.log(json);\r\n        }\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        e.stopPropagation();\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\":(this.state.opened)?\"flex\":\"none\", \"height\":\"250px\"}}>\r\n                        <div className=\"fullTitleInformationContainer\">\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                <Spinner size=\"large\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlockMobile;","import React from 'react';\r\nimport {\r\n    Progress\r\n\r\n} from '@vkontakte/vkui';\r\n\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.statData!=undefined &&\r\n                this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\nimport {\n    View,\n    Root,\n    FixedLayout, Search, Group, Div, Panel\n\n} from '@vkontakte/vkui';\nimport {platform, IOS, ANDROID} from '@vkontakte/vkui';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport SubscribeBlockMobile from \"./common/SubscribeBlockMobile\";\nimport StatisticBlock from \"./common/StatisticBlock\";\n//import PanelSpinner from '@vkontakte/vkui/src/components/PanelSpinner/PanelSpinner'\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            subscribeTitles: [],\n            urlData:data,\n            loading:true,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode:e.currentTarget.dataset.mode});\n    }\n\n    componentDidMount() {\n        fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n            .then(resp => resp.json())\n            .then((result) => {\n                for(let el in result){\n                    result[el].showed=true;\n                }\n                this.setState({subscribeTitles: result, loading:false});\n            });\n\n    }\n\n    async switchSubscribeStatus(titleId, titleType){\n        if(titleId!==0 && titleId!==undefined && titleType!==undefined){\n            let resp= await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {method: 'POST', body: this.state.urlData});\n            let json=await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId){\n        if(minimumId==undefined){\n            minimumId=0;\n        }\n        let resp= await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json= await resp.json();\n        return json;\n    }\n\n\n    render() {\n        return (\n            <Root activeView=\"sub-title\">\n                <View id=\"sub-title\" activePanel={this.state.mode}>\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen} client={this.state.clientType}/>\n\n                        {this.state.subscribeTitles.map(item => (\n                            (this.state.clientType!=='desktop_web')?<SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)}/>:<SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)}/>\n\n                        ))}\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"0\" loader={this.loadStatistic.bind(this)} />\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"797\" loader={this.loadStatistic.bind(this)} />\n                    </Panel>\n                </View>\n            </Root>\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}