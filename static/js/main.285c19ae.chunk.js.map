{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","toggleContext","bind","assertThisInitialized","setState","react_default","a","createElement","vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","data-mode","poll_default","React","Component","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","shikiResp","undefined","showed","display","font-size","border-top","border-bottom","border-right","border-left","border-style","border-color","margin-bottom","padding-top","padding-bottom","background-color","padding","color","float","chevron_default","margin-left","sprintf","require","App","params","queryString","parse","window","location","search","vk_viewer_group_role","userId","vk_user_id","subscribeTitles","_this2","data","FormData","par","append","fetch","method","body","then","resp","json","result","el","console","log","activeView","id","activePanel","common_Header","map","item","common_SubscribeBlock","Boolean","hostname","match","connect","subscribe","e","detail","type","schemeAttribute","document","createAttribute","value","scheme","attributes","setNamedItem","send","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.285c19ae.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rights:props.rights,\r\n            mode:props.mode,\r\n            opened:false,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext(){\r\n        this.setState({opened:!this.state.opened});\r\n    }\r\n    render() {\r\n        if(this.state.rights===\"editor\" || this.state.rights===\"admin\"){\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        Уведомления\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification />}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} />}\r\n                                //onClick={select}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll />}\r\n                                asideContent={this.state.mode === 'statistic_full' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} /> }\r\n                                //onClick={select}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll />}\r\n                                asideContent={this.state.mode === 'statistic_cur' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} />}\r\n                                //onClick={select}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Статистика текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n    Div\r\n\r\n} from '@vkontakte/vkui';\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron';\r\nclass SubscribeBlock extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp:undefined,\r\n            opened:false,\r\n            showed:props.anime.showed\r\n        };\r\n    }\r\n\r\n    render(){\r\n        if(this.state.showed){\r\n            return (\r\n\r\n                <div style={{\"display\":\"flex\",\"font-size\":\"13px\",\"border-top\":\"0px\", \"border-bottom\":\"1px\", \"border-right\":\"0px\", \"border-left\":\"0px\", \"border-style\":\"solid\", \"border-color\":\"var(--button_bot_shadow)\", \"margin-bottom\":\"5px\", \"padding-top\":\"5px\", \"padding-bottom\":\"5px\",\"background-color\":\"var(--background_content)\", \"padding\":\"12px\", \"color\":\"var(--accent)\"}}>\r\n                    <div style={{\"display\":\"inline\",\"float\":\"left\"}}>{this.state.opened ? <Icon16Dropdown fill=\"var(--accent)\"/> : <Icon16Chevron fill=\"var(--accent)\"/>}</div>\r\n                    <div style={{\"display\":\"inline\",\"float\":\"left\", \"margin-left\":\"12px\"}}>{this.state.animeName}<br/>{this.state.animeNameRus}</div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\nimport {\n    View,\n    Root,\n    FixedLayout, Search, Group, Div, Panel,\n\n} from '@vkontakte/vkui';\nimport {platform, IOS, ANDROID} from '@vkontakte/vkui';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            subscribeTitles: []\n        };\n\n\n    }\n\n\n    selectScreen() {\n\n    }\n\n    componentDidMount() {\n        let data = new FormData();\n        let params = queryString.parse(window.location.search);\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: data})\n            .then(resp => resp.json())\n            .then((result) => {\n                for(let el in result){\n                    result[el].showed=true;\n                }\n                this.setState({subscribeTitles: result});\n                console.log(result);\n            });\n\n    }\n\n\n    render() {\n        return (\n            <Root activeView=\"sub-title\">\n                <View id=\"sub-title\" activePanel={this.state.mode}>\n                    <Panel id=\"subscribe\">\n                        <Header rights={this.state.rights} mode={this.state.mode}/>\n                        <Search/>\n                        {this.state.subscribeTitles.map(item => (\n                            <SubscribeBlock anime={item}/>\n                        ))}\n                    </Panel>\n                </View>\n            </Root>\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}