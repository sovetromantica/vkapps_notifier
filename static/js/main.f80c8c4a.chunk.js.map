{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribePanel.js","common/StatisticPanel.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","PanelHeader_default","noShadow","PanelHeaderContent_default","aside","dropdown_default","onClick","HeaderContext_default","onClose","List_default","Cell_default","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","imageLoading","click","clickButton","imageFinishLoad","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","prevProps","prevState","snapshot","resize","status","switching","Spinner_default","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","fire_default","Button_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","onLoad","map","item","show_vk","Link_default","href","vk_link","target","key","creator_id","nickname","reduce","prev","curr","component","SubscribePanel","subscribeTitles","loading","searchUpdate","refresh","sendClearRequest","setTimeout","toLowerCase","indexOf","currentTarget","dataset","titles","clear","id","paddingTop","paddingBottom","FixedLayout_default","vertical","Tabs_default","TabsItem_default","after","list_default","selected","recent_default","PanelSpinner_default","Search_default","theme","onChange","length","common_SubscribeBlock","Div_default","color","marginTop","StatisticPanel","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","Progress_default","value","Counter_default","sub","dub","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","urlData","popout","selectScreen","resizeVkIframe","switchSubscribeStatus","getSubscribeList","clearSubscriptions","clearSubscriptionsLaunch","closePopout","hash","stringify","document","getElementById","scrollHeight","method","body","refreshFnc","ok","Alert_default","actions","title","autoclose","action","titleId","titleType","Root_default","activeView","View_default","activePanel","Panel_default","common_Header","common_SubscribePanel","common_StatisticPanel","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.f80c8c4a.chunk.js","sourcesContent":["import Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport HeaderContext from \"@vkontakte/vkui/dist/components/HeaderContext/HeaderContext\";\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\r\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\r\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader noShadow>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления' : null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика' : null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон' : null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n\r\n        } else {\r\n            return (<PanelHeader noShadow>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica.com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink: '',\r\n            titleSiteLink: '',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n            imageLoading: true,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n        this.imageFinishLoad = this.imageFinishLoad.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres = [];\r\n            for (let el in json.genres) {\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc: json.description_html.replace(/<[^>]*>/gm, ''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try {\r\n            e.stopPropagation();\r\n        } catch (ex) {\r\n        }\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type);\r\n            if (resp.error_code === 0) {\r\n                if(this.props.mode=='current'){\r\n                    switch (type) {\r\n                        case 0:\r\n                            if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                                this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                                this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n                    switch(type){\r\n                        case 0:\r\n                            this.setState({subStatus:-1, subSwitching:false});\r\n                            break;\r\n                        case 1:\r\n                            this.setState({dubStatus:-1, dubSwitching:false});\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            } else if (resp.error_code === 7) {\r\n                connect.subscribe((e) => {\r\n                    switch (e.detail.type) {\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if (e.detail.data.result) {\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    imageFinishLoad() {\r\n        this.props.resize();\r\n        this.setState({imageLoading: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{(this.state.priority >= 10000) ?\r\n                                <Icon12Fire fill={\"#f93522\"}\r\n                                            className=\"fullTextInformationIconFire\"/> : null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                            <div className=\"subscribeRowButtonContainer\">\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 0)}\r\n                                        className=\"subscribeRowButton\">Субтитры</Button>\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 1)}\r\n                                        className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                    <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                    </div>\r\n                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"space-around\"}}>\r\n                        {this.state.shikiResp === undefined &&\r\n                        <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                        <div className=\"fullTitleInformationContainer\"\r\n                             style={{\"display\": (this.state.shikiResp === undefined) ? \"none\" : null}}>\r\n\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                {this.state.imageLoading && <Spinner size=\"large\"/>}\r\n                                <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"\r\n                                     onLoad={this.imageFinishLoad}/>\r\n                            </div>\r\n                            <div className=\"fullTitleInformationContent\">\r\n                                {this.state.titleDesc !== '' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                {this.state.titleDesc !== '' && <hr/>}\r\n                                {this.state.titleGenres !== '' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                {this.state.titleGenres !== '' && <hr/>}\r\n                                {this.state.translators != null &&\r\n                                <div><b>Переводчики: </b>{this.state.translators.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"t_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.editors != null && <div><b>Редакторы: </b>{this.state.editors.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"e_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.dubbers != null && <div><b>Дабберы: </b>{this.state.dubbers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"d_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.timers != null && <div><b>Таймеры: </b>{this.state.timers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"tm_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {(this.state.translators != null || this.state.editors != null || this.state.dubbers != null || this.state.timers != null) &&\r\n                                <hr/>}\r\n                                <div className=\"fullTitleInformationContentButton\">\r\n                                    <Button stretched href={this.state.titleShikimoriLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Shikimori</Button>\r\n                                    <Button stretched href={this.state.titleSiteLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Сайт</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport SubscribeBlock from \"./SubscribeBlock\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\nimport Icon24List from '@vkontakte/icons/dist/24/list';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\n\r\n\r\nclass SubscribePanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscribeTitles: [],\r\n            loading: true,\r\n            mode: \"current\",\r\n        };\r\n        this.searchUpdate = this.searchUpdate.bind(this);\r\n        this.switch = this.switch.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n        this.sendClearRequest = this.sendClearRequest.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({subscribeTitles: await this.props.subscribe(), loading: false});\r\n        //this.resizeVkIframe();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(), 100);\r\n    }\r\n\r\n    async refresh(){\r\n        this.setState({subscribeTitles: [], loading: true})\r\n        this.setState({subscribeTitles: await this.props.subscribe(this.state.mode), loading: false});\r\n    }\r\n\r\n    searchUpdate(e) {\r\n        for (let el in this.state.subscribeTitles) {\r\n            if (this.state.subscribeTitles[el].anime_name.toLowerCase().indexOf(e.toLowerCase()) !== -1 || this.state.subscribeTitles[el].anime_name_rus.toLowerCase().indexOf(e.toLowerCase()) !== -1) {\r\n                this.state.subscribeTitles[el].showed = true;\r\n            } else {\r\n                this.state.subscribeTitles[el].showed = false;\r\n            }\r\n            this.setState({subscribeTitles: this.state.subscribeTitles});\r\n        }\r\n    }\r\n\r\n    async switch(e) {\r\n        this.setState({loading: true, mode: e.currentTarget.dataset.mode, subscribeTitles: []});\r\n        let titles = await this.props.subscribe(e.currentTarget.dataset.mode);\r\n        this.setState({subscribeTitles: titles, loading: false});\r\n    }\r\n\r\n    sendClearRequest(){\r\n        this.props.clear(this.refresh);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"subscribe_size\"\r\n                 style={{\r\n                     \"paddingTop\": (this.props.client === 'desktop_web') ? \"50px\" : \"60px\",\r\n                     \"paddingBottom\": (this.props.client === 'desktop_web') ? \"0px\" : \"60px\"\r\n                 }}>\r\n                {this.props.client === 'desktop_web' ? <FixedLayout vertical=\"top\">\r\n                    <Tabs>\r\n                        <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                  onClick={this.switch}>Основной</TabsItem>\r\n                        <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                  onClick={this.switch}>Устаревший</TabsItem>\r\n                    </Tabs>\r\n                </FixedLayout> : null}\r\n                {this.state.loading && <PanelSpinner size=\"large\"/>}\r\n                {this.props.client === 'desktop_web' ?\r\n                    <Search className=\"Search--web\" theme=\"default\" onChange={this.searchUpdate}/> :\r\n                    <FixedLayout vertical=\"top\"><Search theme=\"default\" onChange={this.searchUpdate}/></FixedLayout>}\r\n\r\n                {this.state.subscribeTitles.length > 0 && this.state.subscribeTitles.map(item => (\r\n                    (item.showed) ?\r\n                        <SubscribeBlock anime={item} switch={this.props.switch}\r\n                                        key={\"sub_\" + item.anime_id} resize={this.props.resize}\r\n                                        mode={this.state.mode}/> :\r\n                        null\r\n\r\n                ))}\r\n                {(this.state.subscribeTitles.length === 0 && !this.state.loading) ? <Div style={{\r\n                    \"color\": \"var(--accent)\",\r\n                    \"justifyContent\": \"space-around\",\r\n                    \"width\": \"100%\",\r\n                    \"display\": \"flex\"\r\n                }}>Отсутствуют аниме</Div>:\r\n                <Div style={{\"color\":\"var(--accent)\",\"justifyContent\":\"space-around\", \"display\":\"flex\", \"marginTop\":\"15px\"}}>\r\n                    <Button stretched style={{\"height\":\"40px\"}} onClick={this.sendClearRequest}>Отписаться от всех рассылок</Button>\r\n                </Div>\r\n                }\r\n                {this.props.client !== 'desktop_web' ?\r\n                    <FixedLayout vertical=\"bottom\">\r\n                        <Tabs>\r\n                            <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                      onClick={this.switch}>Основной</TabsItem>\r\n                            <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                      onClick={this.switch}>Устаревший</TabsItem>\r\n                        </Tabs>\r\n                    </FixedLayout>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubscribePanel;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nclass StatisticPanel extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize,300);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner size=\"large\"/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\"+item.anime_id}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Counter type=\"primary\">{item.sub}</Counter>\r\n                            <Counter>{item.dub}</Counter>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticPanel","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport SubscribePanel from './common/SubscribePanel'\nimport connect from '@vkontakte/vkui-connect'\nimport StatisticPanel from \"./common/StatisticPanel\";\nimport Alert from \"@vkontakte/vkui/dist/components/Alert/Alert\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get';\nconst reqSubscribeOldList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get/old';\nconst reqSubscribeClear = 'https://api.sovetromantica.com/api/v1/notify/vkapp/clear';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            urlData: data,\n            popout: null,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n        this.switchSubscribeStatus = this.switchSubscribeStatus.bind(this);\n        this.getSubscribeList = this.getSubscribeList.bind(this);\n        this.clearSubscriptions = this.clearSubscriptions.bind(this);\n        this.clearSubscriptionsLaunch = this.clearSubscriptionsLaunch.bind(this);\n        this.closePopout = this.closePopout.bind(this);\n\n        this.height = 0;\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            if (hash.mode === 'subscribe' || hash.mode === 'statistic_full' || hash.mode === 'statistic_cur') {\n                this.state.mode = hash.mode;\n            }\n\n        }\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            hash.mode = e.currentTarget.dataset.mode;\n            connect.send(\"VKWebAppSetLocation\", {\"location\": queryString.stringify(hash)});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.resizeVkIframe();\n    }\n\n    componentDidMount() {\n        this.resizeVkIframe();\n    }\n\n\n    resizeVkIframe() {\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode + \"_size\").scrollHeight + 110;\n            if (this.height !== height) {\n                this.height = height;\n                connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\": height});\n            }\n\n        }\n    }\n\n    async getSubscribeList(type = 'current') {\n        let resp = await fetch((type === 'current') ? reqSubscribeList : reqSubscribeOldList, {\n            method: 'POST',\n            body: this.state.urlData\n        });\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        return json;\n        //this.resizeVkIframe();\n    }\n\n    async clearSubscriptions(refreshFnc) {\n        let resp = await fetch(reqSubscribeClear, {method: 'POST', body: this.state.urlData});\n        if (resp.ok){\n            this.props.refreshFnc();\n        }\n    }\n\n    clearSubscriptionsLaunch(refreshFnc) {\n        this.props.refresh=refreshFnc;\n        this.setState({\n            popout:\n                <Alert actions={[\n                    {\n                        title: \"Удалить\",\n                        autoclose: true,\n                        style: \"destructive\",\n                        action:this.clearSubscriptions\n                    },\n                    {\n                        title: \"Отмена\",\n                        autoclose: true,\n                        style: \"cancel\"\n                    }]}\n                onClose={this.closePopout}>\n                    <h2>Подтвердите действие</h2>\n                    <p>Вы уверены, что хотите удалить все уведомления? <br/>Будут удалены все текущие, а также старые подписки. <br/>Вы перестаните получать уведомления о новых сериях.</p>\n                </Alert>\n        })\n    }\n\n    closePopout(e){\n        console.log(e);\n        this.setState({popout: null});\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode} popout={this.state.popout}>\n\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode=\"subscribe\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n\n                        <SubscribePanel switch={this.switchSubscribeStatus} resize={this.resizeVkIframe}\n                                        subscribe={this.getSubscribeList} client={this.state.clientType}\n                                        rights={this.state.rights} clear={this.clearSubscriptionsLaunch}/>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode=\"statistic_full\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode=\"statistic_cur\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"835\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}