{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribeBlockMobile.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","toggleContext","bind","assertThisInitialized","setState","react_default","a","createElement","vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","click","clickButton","e","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","console","log","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","_this2","send","group_id","status","switching","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","map","item","show_vk","href","vk_link","nickname","reduce","prev","curr","component","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","subscribeTitles","urlData","loading","method","body","then","titleId","titleType","activeView","id","activePanel","common_Header","common_SubscribeBlock","switchSubscribeStatus","Boolean","hostname","match","schemeAttribute","document","createAttribute","value","scheme","attributes","setNamedItem","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.be2d01f5.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rights:props.rights,\r\n            mode:props.mode,\r\n            opened:false,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext(){\r\n        this.setState({opened:!this.state.opened});\r\n    }\r\n    render() {\r\n        if(this.state.rights===\"editor\" || this.state.rights===\"admin\"){\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        Уведомления\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification />}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} />}\r\n                                //onClick={select}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll />}\r\n                                asideContent={this.state.mode === 'statistic_full' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} /> }\r\n                                //onClick={select}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll />}\r\n                                asideContent={this.state.mode === 'statistic_cur' ? <Icon24Done fill=\"var(--accent)\" /> : <div style={ {width:'24px'}} />}\r\n                                //onClick={select}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Статистика текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n    Button,\r\n    Spinner,\r\n    Link\r\n\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica/com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink:'',\r\n            titleSiteLink:'',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres=[];\r\n            for (let el in json.genres){\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc:json.description_html.replace(/<[^>]*>/gm,''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n            console.log(1);\r\n            //Image.prefetch(json.image.original);\r\n            console.log(2);\r\n\r\n            console.log(json);\r\n        }\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try{\r\n            e.stopPropagation();\r\n        } catch(ex){}\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n            else if (resp.error_code===7){\r\n                connect.subscribe((e)=>{\r\n                    switch(e.detail.type){\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if(e.detail.data.result){\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            }\r\n            else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                        <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                        </div>\r\n                        <div style={{\"width\":\"100%\",\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\r\n                            {this.state.shikiResp===undefined && <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                            <div className=\"fullTitleInformationContainer\" style={{\"display\":(this.state.shikiResp===undefined)?\"none\":null}}>\r\n\r\n                                <div className=\"fullTitleInformationImage\" >\r\n                                    <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"/>\r\n                                </div>\r\n                                <div className=\"fullTitleInformationContent\">\r\n                                    {this.state.titleDesc!=='' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                    {this.state.titleDesc!=='' && <hr/>}\r\n                                    {this.state.titleGenres!=='' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                    {this.state.titleGenres!=='' && <hr/>}\r\n                                    {this.state.translators!=null && <div><b>Переводчики: </b>{this.state.translators.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.editors!=null && <div><b>Редакторы: </b>{this.state.editors.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.dubbers!=null && <div><b>Дабберы: </b>{this.state.dubbers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.timers!=null && <div><b>Таймеры: </b>{this.state.timers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\">{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {(this.state.translators!=null || this.state.editors!=null || this.state.dubbers!=null || this.state.timers!=null) && <hr/>}\r\n                                    <div className=\"fullTitleInformationContentButton\">\r\n                                        <Button stretched href={this.state.titleShikimoriLink} component=\"a\" className=\"subscribeRowButton\">Shikimori</Button>\r\n                                        <Button stretched href={this.state.titleSiteLink} component=\"a\" className=\"subscribeRowButton\">Сайт</Button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport {\r\n    Button,\r\n    Spinner\r\n\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport '../css/main.css';\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\n\r\nclass SubscribeBlockMobile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false\r\n        };\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            this.setState({shikiResp: json});\r\n            console.log(1);\r\n            //Image.prefetch(json.image.original);\r\n            console.log(2);\r\n            console.log(json);\r\n        }\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        e.stopPropagation();\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\":(this.state.opened)?\"flex\":\"none\", \"height\":\"250px\"}}>\r\n                        <div className=\"fullTitleInformationContainer\">\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                <Spinner size=\"large\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlockMobile;","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\nimport {\n    View,\n    Root,\n    FixedLayout, Search, Group, Div, Panel\n\n} from '@vkontakte/vkui';\nimport {platform, IOS, ANDROID} from '@vkontakte/vkui';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport SubscribeBlockMobile from \"./common/SubscribeBlockMobile\";\n//import PanelSpinner from '@vkontakte/vkui/src/components/PanelSpinner/PanelSpinner'\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            subscribeTitles: [],\n            urlData:data,\n            loading:true,\n        };\n\n\n    }\n\n\n    selectScreen() {\n\n    }\n\n    componentDidMount() {\n        fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n            .then(resp => resp.json())\n            .then((result) => {\n                for(let el in result){\n                    result[el].showed=true;\n                }\n                console.log(result);\n                this.setState({subscribeTitles: result, loading:false});\n            });\n\n    }\n\n    async switchSubscribeStatus(titleId, titleType){\n        if(titleId!==0 && titleId!==undefined && titleType!==undefined){\n            let resp= await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {method: 'POST', body: this.state.urlData});\n            let json=await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n\n    render() {\n        return (\n            <Root activeView=\"sub-title\">\n                <View id=\"sub-title\" activePanel={this.state.mode}>\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode={this.state.mode}/>\n\n                        <Search/>\n                        {this.state.subscribeTitles.map(item => (\n                            (this.state.clientType!=='desktop_web')?<SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)}/>:<SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)}/>\n\n                        ))}\n                    </Panel>\n                </View>\n            </Root>\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}