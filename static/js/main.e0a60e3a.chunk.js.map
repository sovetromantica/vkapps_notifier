{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribePanel.js","common/StatisticPanel.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","console","log","react_default","a","createElement","PanelHeader_default","noShadow","PanelHeaderContent_default","aside","dropdown_default","onClick","HeaderContext_default","onClose","List_default","Cell_default","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","FixedLayout_default","vertical","Tabs_default","TabsItem_default","selected","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","imageLoading","click","clickButton","imageFinishLoad","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","prevProps","prevState","snapshot","resize","status","switching","Spinner_default","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","fire_default","Button_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","onLoad","map","item","show_vk","Link_default","href","vk_link","target","key","creator_id","nickname","reduce","prev","curr","component","SubscribePanel","subscribeTitles","loading","searchUpdate","setTimeout","toLowerCase","indexOf","id","paddingTop","PanelSpinner_default","Search_default","theme","onChange","common_SubscribeBlock","StatisticPanel","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","Progress_default","value","Counter_default","sub","dub","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","urlData","selectScreen","resizeVkIframe","switchSubscribeStatus","getSubscribeList","hash","currentTarget","dataset","stringify","document","getElementById","scrollHeight","method","body","titleId","titleType","Root_default","activeView","View_default","activePanel","Panel_default","common_Header","common_SubscribePanel","common_StatisticPanel","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.e0a60e3a.chunk.js","sourcesContent":["import Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport HeaderContext from \"@vkontakte/vkui/dist/components/HeaderContext/HeaderContext\";\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\r\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\r\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            if (this.state.client !== 'desktop_web') {\r\n                console.log(this.props.client);\r\n                return (\r\n                    <PanelHeader noShadow>\r\n                        <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                            {this.state.mode === 'subscribe' ? 'Уведомления' : null}\r\n                            {this.state.mode === 'statistic_full' ? 'Статистика' : null}\r\n                            {this.state.mode === 'statistic_cur' ? 'Текущий сезон' : null}\r\n                        </PanelHeaderContent>\r\n                        <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Notification/>}\r\n                                    asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                        <div style={{width: '24px'}}/>}\r\n                                    onClick={(e) => {\r\n                                        this.setState({opened: !this.state.opened});\r\n                                        this.props.select(e);\r\n                                    }}\r\n                                    data-mode=\"subscribe\"\r\n                                >\r\n                                    Уведомления\r\n                                </Cell>\r\n                                <Cell\r\n                                    before={<Icon24Poll/>}\r\n                                    asideContent={this.state.mode === 'statistic_full' ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                    onClick={(e) => {\r\n                                        this.setState({opened: !this.state.opened});\r\n                                        this.props.select(e);\r\n                                    }}\r\n                                    data-mode=\"statistic_full\"\r\n                                >\r\n                                    Статистика\r\n                                </Cell>\r\n                                <Cell\r\n                                    before={<Icon24Poll/>}\r\n                                    asideContent={this.state.mode === 'statistic_cur' ?\r\n                                        <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                    onClick={(e) => {\r\n                                        this.setState({opened: !this.state.opened});\r\n                                        this.props.select(e);\r\n                                    }}\r\n                                    data-mode=\"statistic_cur\"\r\n                                >\r\n                                    Текущий сезон\r\n                                </Cell>\r\n\r\n                            </List>\r\n                        </HeaderContext>\r\n                    </PanelHeader>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div>\r\n                        <PanelHeader noShadow>\r\n                            {this.state.mode === 'subscribe' ? 'Уведомления' : null}\r\n                            {this.state.mode === 'statistic_full' ? 'Статистика' : null}\r\n                            {this.state.mode === 'statistic_cur' ? 'Текущий сезон' : null}\r\n                        </PanelHeader>\r\n                        <FixedLayout vertical=\"top\">\r\n                            <Tabs>\r\n                                <TabsItem selected={this.state.mode === 'subscribe'} data-mode=\"subscribe\" onClick={this.props.select}>Уведомления</TabsItem>\r\n                                <TabsItem selected={this.state.mode === 'statistic_full'} data-mode=\"statistic_full\" onClick={this.props.select}>Статистика</TabsItem>\r\n                                <TabsItem selected={this.state.mode === 'statistic_cur'} data-mode=\"statistic_cur\" onClick={this.props.select}>Текущий сезон</TabsItem>\r\n                            </Tabs>\r\n                        </FixedLayout>\r\n                    </div>\r\n                    );\r\n\r\n            }\r\n\r\n\r\n        } else {\r\n            return (<PanelHeader noShadow>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica.com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink: '',\r\n            titleSiteLink: '',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n            imageLoading: true,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n        this.imageFinishLoad = this.imageFinishLoad.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres = [];\r\n            for (let el in json.genres) {\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc: json.description_html.replace(/<[^>]*>/gm, ''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try {\r\n            e.stopPropagation();\r\n        } catch (ex) {\r\n        }\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type);\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            } else if (resp.error_code === 7) {\r\n                connect.subscribe((e) => {\r\n                    switch (e.detail.type) {\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if (e.detail.data.result) {\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    imageFinishLoad() {\r\n        this.props.resize();\r\n        this.setState({imageLoading: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{(this.state.priority >= 10000) ?\r\n                                <Icon12Fire fill={\"#f93522\"}\r\n                                            className=\"fullTextInformationIconFire\"/> : null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                            <div className=\"subscribeRowButtonContainer\">\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 0)}\r\n                                        className=\"subscribeRowButton\">Субтитры</Button>\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 1)}\r\n                                        className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                    <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                    </div>\r\n                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"space-around\"}}>\r\n                        {this.state.shikiResp === undefined &&\r\n                        <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                        <div className=\"fullTitleInformationContainer\"\r\n                             style={{\"display\": (this.state.shikiResp === undefined) ? \"none\" : null}}>\r\n\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                {this.state.imageLoading && <Spinner size=\"large\"/>}\r\n                                <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"\r\n                                     onLoad={this.imageFinishLoad}/>\r\n                            </div>\r\n                            <div className=\"fullTitleInformationContent\">\r\n                                {this.state.titleDesc !== '' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                {this.state.titleDesc !== '' && <hr/>}\r\n                                {this.state.titleGenres !== '' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                {this.state.titleGenres !== '' && <hr/>}\r\n                                {this.state.translators != null &&\r\n                                <div><b>Переводчики: </b>{this.state.translators.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"t_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.editors != null && <div><b>Редакторы: </b>{this.state.editors.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"e_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.dubbers != null && <div><b>Дабберы: </b>{this.state.dubbers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"d_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.timers != null && <div><b>Таймеры: </b>{this.state.timers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"tm_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {(this.state.translators != null || this.state.editors != null || this.state.dubbers != null || this.state.timers != null) &&\r\n                                <hr/>}\r\n                                <div className=\"fullTitleInformationContentButton\">\r\n                                    <Button stretched href={this.state.titleShikimoriLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Shikimori</Button>\r\n                                    <Button stretched href={this.state.titleSiteLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Сайт</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport SubscribeBlock from \"./SubscribeBlock\";\r\n\r\n\r\n\r\nclass SubscribePanel extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscribeTitles: [],\r\n            loading: true,\r\n        };\r\n        this.searchUpdate = this.searchUpdate.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({subscribeTitles: await this.props.subscribe(), loading: false});\r\n        //this.resizeVkIframe();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(),100);\r\n    }\r\n\r\n    searchUpdate(e) {\r\n        for (let el in this.state.subscribeTitles) {\r\n            if (this.state.subscribeTitles[el].anime_name.toLowerCase().indexOf(e.toLowerCase()) !== -1 || this.state.subscribeTitles[el].anime_name_rus.toLowerCase().indexOf(e.toLowerCase()) !== -1) {\r\n                this.state.subscribeTitles[el].showed = true;\r\n            } else {\r\n                this.state.subscribeTitles[el].showed = false;\r\n            }\r\n            this.setState({subscribeTitles: this.state.subscribeTitles});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"subscribe_size\"\r\n                 style={{\"paddingTop\": (this.props.client === 'desktop_web') ? \"50px\" : \"60px\"}}>\r\n                {this.state.loading && <PanelSpinner size=\"large\"/>}\r\n                {this.props.client === 'desktop_web' ? !this.state.loading &&\r\n                    <Search theme=\"default\" onChange={this.searchUpdate}/> : !this.state.loading &&\r\n                    <FixedLayout vertical=\"top\"><Search theme=\"default\" onChange={this.searchUpdate}/></FixedLayout>}\r\n\r\n                {this.state.subscribeTitles.map(item => (\r\n                    (item.showed) ?\r\n                        <SubscribeBlock anime={item} switch={this.props.switch}\r\n                                        key={\"sub_\" + item.anime_id} resize={this.props.resize}/> :\r\n                        null\r\n\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubscribePanel;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nclass StatisticPanel extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize,300);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"} style={{\"paddingTop\":(this.props.client==='desktop_web')?\"50px\":null}}>\r\n                {this.state.statData==undefined && <PanelSpinner size=\"large\"/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\"+item.anime_id}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Counter type=\"primary\">{item.sub}</Counter>\r\n                            <Counter>{item.dub}</Counter>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticPanel","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport SubscribePanel from './common/SubscribePanel'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport StatisticPanel from \"./common/StatisticPanel\";\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            urlData: data,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n        this.switchSubscribeStatus = this.switchSubscribeStatus.bind(this);\n        this.getSubscribeList = this.getSubscribeList.bind(this);\n        this.height = 0;\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            if (hash.mode === 'subscribe' || hash.mode === 'statistic_full' || hash.mode === 'statistic_cur') {\n                this.state.mode = hash.mode;\n            }\n\n        }\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            hash.mode = e.currentTarget.dataset.mode;\n            connect.send(\"VKWebAppSetLocation\", {\"location\": queryString.stringify(hash)});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.resizeVkIframe();\n    }\n\n    componentDidMount() {\n        this.resizeVkIframe();\n    }\n\n\n    resizeVkIframe() {\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode + \"_size\").scrollHeight + 110;\n            if (this.height !== height) {\n                this.height = height;\n                connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\": height});\n            }\n\n        }\n    }\n\n    async getSubscribeList() {\n        let resp = await fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        return json;\n        //this.resizeVkIframe();\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode}>\n\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode=\"subscribe\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n\n                        <SubscribePanel switch={this.switchSubscribeStatus} resize={this.resizeVkIframe} subscribe={this.getSubscribeList} client={this.state.clientType}/>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode=\"statistic_full\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode=\"statistic_cur\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"835\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}