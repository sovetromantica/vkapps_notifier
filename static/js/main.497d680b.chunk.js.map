{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/SubscribePanel.js","common/StatisticBlock.js","common/StatisticPanel.js","App.js","sw.js","index.js"],"names":["Header","props","state","rights","mode","opened","client","toggleContext","bind","this","setState","noShadow","aside","onClick","onClose","before","asideContent","fill","style","width","e","select","data-mode","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","imageLoading","click","clickButton","imageFinishLoad","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","console","log","prevProps","prevState","snapshot","resize","status","switching","size","className","stretched","getButtonStyle","getBeforeSymbol","src","onLoad","map","item","show_vk","href","vk_link","target","key","creator_id","nickname","reduce","prev","curr","component","SubscribePanel","subscribeTitles","loading","searchUpdate","returnClear","sendClearRequest","setTimeout","clear","toLowerCase","indexOf","currentTarget","dataset","titles","clearDisplay","id","vertical","after","selected","theme","onChange","length","dateFormat","StatisticBlock","statDataAdded","statDataRemoved","statDataDate","statSubViews","statDubViews","statViewsPoints","statistic","added","removed","axis","stat","forEach","i","arr","Date","parse","date","view_points","sub_views","sub_view","num","view","includes","reverse","dub_views","dub_view","sort","a","b","value","total","maxVotes","sub","dub","height","series","name","options","chart","background","foreColor","defaultLocale","toolbar","show","animations","enabled","title","text","align","margin","dataLabels","tooltip","shared","marker","labels","stroke","curve","xaxis","showDuplicates","yaxis","tickAmount","min","max","hideOverlappingLabels","forceNiceScale","StatisticPanel","minimumId","statData","loader","Array","isArray","reqStatisticTitleUrl","reqSubscribeList","reqSubscribeOldList","App","params","queryString","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","urlData","popout","selectScreen","resizeVkIframe","switchSubscribeStatus","getSubscribeList","clearSubscriptions","clearSubscriptionsLaunch","closePopout","getStatistic","hash","stringify","document","getElementById","scrollHeight","method","body","titleId","returnFnc","actions","autoclose","action","titleType","activeView","activePanel","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.497d680b.chunk.js","sourcesContent":["import Cell from \"@vkontakte/vkui/dist/components/Cell/Cell\";\r\nimport HeaderContext from \"@vkontakte/vkui/dist/components/PanelHeaderContext/PanelHeaderContext\";\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\r\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\r\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader noShadow>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления' : null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика' : null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон' : null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n\r\n        } else {\r\n            return (<PanelHeader noShadow>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vk-bridge'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://shikimori.one/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica.com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink: '',\r\n            titleSiteLink: '',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n            imageLoading: true,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n        this.imageFinishLoad = this.imageFinishLoad.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres = [];\r\n            for (let el in json.genres) {\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc: json.description_html.replace(/<[^>]*>/gm, ''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try {\r\n            e.stopPropagation();\r\n        } catch (ex) {\r\n        }\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type);\r\n            if (resp.error_code === 0) {\r\n                if(this.props.mode=='current'){\r\n                    switch (type) {\r\n                        case 0:\r\n                            if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                                this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                            }\r\n                            break;\r\n                        case 1:\r\n                            if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                                this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                } else {\r\n                    switch(type){\r\n                        case 0:\r\n                            this.setState({subStatus:-1, subSwitching:false});\r\n                            break;\r\n                        case 1:\r\n                            this.setState({dubStatus:-1, dubSwitching:false});\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            } else if (resp.error_code === 7) {\r\n                connect.subscribe((e) => {\r\n                    switch (e.detail.type) {\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if (e.detail.data.result) {\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    imageFinishLoad() {\r\n        this.props.resize();\r\n        this.setState({imageLoading: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{(this.state.priority >= 10000) ?\r\n                                <Icon12Fire fill={\"#f93522\"}\r\n                                            className=\"fullTextInformationIconFire\"/> : null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                            <div className=\"subscribeRowButtonContainer\">\r\n                                <Button stretched\r\n                                        mode={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 0)}\r\n                                        className=\"subscribeRowButton\">Субтитры</Button>\r\n                                <Button stretched\r\n                                        mode={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 1)}\r\n                                        className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                    <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                    </div>\r\n                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"space-around\"}}>\r\n                        {this.state.shikiResp === undefined &&\r\n                        <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                        <div className=\"fullTitleInformationContainer\"\r\n                             style={{\"display\": (this.state.shikiResp === undefined) ? \"none\" : null}}>\r\n\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                {this.state.imageLoading && <Spinner size=\"large\"/>}\r\n                                <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"\r\n                                     onLoad={this.imageFinishLoad}/>\r\n                            </div>\r\n                            <div className=\"fullTitleInformationContent\">\r\n                                {this.state.titleDesc !== '' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                {this.state.titleDesc !== '' && <hr/>}\r\n                                {this.state.titleGenres !== '' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                {this.state.titleGenres !== '' && <hr/>}\r\n                                {this.state.translators != null &&\r\n                                <div><b>Переводчики: </b>{this.state.translators.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"t_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.editors != null && <div><b>Редакторы: </b>{this.state.editors.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"e_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.dubbers != null && <div><b>Дабберы: </b>{this.state.dubbers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"d_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.timers != null && <div><b>Таймеры: </b>{this.state.timers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 target=\"_blank\"\r\n                                                                 key={\"tm_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {(this.state.translators != null || this.state.editors != null || this.state.dubbers != null || this.state.timers != null) &&\r\n                                <hr/>}\r\n                                <div className=\"fullTitleInformationContentButton\">\r\n                                    <Button stretched href={this.state.titleShikimoriLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Shikimori</Button>\r\n                                    <Button stretched href={this.state.titleSiteLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\" target=\"_blank\">Сайт</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport PanelSpinner from \"@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner\";\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\r\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\r\nimport SubscribeBlock from \"./SubscribeBlock\";\r\nimport Tabs from \"@vkontakte/vkui/dist/components/Tabs/Tabs\";\r\nimport TabsItem from \"@vkontakte/vkui/dist/components/TabsItem/TabsItem\";\r\nimport Icon24List from '@vkontakte/icons/dist/24/list';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div'\r\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\r\n\r\n\r\nclass SubscribePanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscribeTitles: [],\r\n            loading: true,\r\n            mode: \"current\",\r\n        };\r\n        this.searchUpdate = this.searchUpdate.bind(this);\r\n        this.switch = this.switch.bind(this);\r\n        this.returnClear = this.returnClear.bind(this);\r\n        this.sendClearRequest = this.sendClearRequest.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({subscribeTitles: await this.props.subscribe(), loading: false});\r\n        //this.resizeVkIframe();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(), 100);\r\n    }\r\n\r\n    async returnClear(){\r\n        await this.props.clear();\r\n        this.setState({subscribeTitles: [], loading: true})\r\n        this.setState({subscribeTitles: await this.props.subscribe(this.state.mode), loading: false});\r\n    }\r\n\r\n    searchUpdate(e) {\r\n        for (let el in this.state.subscribeTitles) {\r\n            if (this.state.subscribeTitles[el].anime_name.toLowerCase().indexOf(e.toLowerCase()) !== -1 || this.state.subscribeTitles[el].anime_name_rus.toLowerCase().indexOf(e.toLowerCase()) !== -1) {\r\n                this.state.subscribeTitles[el].showed = true;\r\n            } else {\r\n                this.state.subscribeTitles[el].showed = false;\r\n            }\r\n            this.setState({subscribeTitles: this.state.subscribeTitles});\r\n        }\r\n    }\r\n\r\n    async switch(e) {\r\n        this.setState({loading: true, mode: e.currentTarget.dataset.mode, subscribeTitles: []});\r\n        let titles = await this.props.subscribe(e.currentTarget.dataset.mode);\r\n        this.setState({subscribeTitles: titles, loading: false});\r\n    }\r\n\r\n    sendClearRequest(){\r\n        this.props.clearDisplay(this.returnClear);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"subscribe_size\"\r\n                 style={{\r\n                     \"paddingBottom\": (this.props.client === 'desktop_web') ? \"0px\" : \"60px\"\r\n                 }}>\r\n                {this.props.client === 'desktop_web' ? <FixedLayout vertical=\"top\">\r\n                    <Tabs>\r\n                        <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                  onClick={this.switch}>Основной</TabsItem>\r\n                        <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                  onClick={this.switch}>Устаревший</TabsItem>\r\n                    </Tabs>\r\n                </FixedLayout> : null}\r\n\r\n                {this.props.client === 'desktop_web' ?\r\n                    <Search className=\"Search--web\" theme=\"default\" onChange={this.searchUpdate}/> :\r\n                    <FixedLayout vertical=\"top\"><Search theme=\"default\" onChange={this.searchUpdate}/></FixedLayout>}\r\n                {this.state.loading && <PanelSpinner size=\"large\"/>}\r\n                {this.state.subscribeTitles.length > 0 && this.state.subscribeTitles.map(item => (\r\n                    (item.showed) ?\r\n                        <SubscribeBlock anime={item} switch={this.props.switch}\r\n                                        key={\"sub_\" + item.anime_id} resize={this.props.resize}\r\n                                        mode={this.state.mode}/> :\r\n                        null\r\n\r\n                ))}\r\n                {(this.state.subscribeTitles.length === 0 && !this.state.loading) && <Div style={{\r\n                    \"color\": \"var(--accent)\",\r\n                    \"justifyContent\": \"space-around\",\r\n                    \"width\": \"100%\",\r\n                    \"display\": \"flex\"\r\n                }}>Отсутствуют аниме</Div>}\r\n                {!this.state.loading &&\r\n                <Div style={{\"color\":\"var(--accent)\",\"justifyContent\":\"space-around\", \"display\":\"flex\", \"marginTop\":\"15px\"}}>\r\n                    <Button stretched style={{\"height\":\"40px\"}} onClick={this.sendClearRequest}>Отписаться от всех рассылок</Button>\r\n                </Div>\r\n                }\r\n                {this.props.client !== 'desktop_web' ?\r\n                    <FixedLayout vertical=\"bottom\">\r\n                        <Tabs>\r\n                            <TabsItem after={<Icon24List/>} selected={this.state.mode === \"current\"} data-mode=\"current\"\r\n                                      onClick={this.switch}>Основной</TabsItem>\r\n                            <TabsItem after={<Icon24Recent/>} selected={this.state.mode === \"old\"} data-mode=\"old\"\r\n                                      onClick={this.switch}>Устаревший</TabsItem>\r\n                        </Tabs>\r\n                    </FixedLayout>\r\n                    : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubscribePanel;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Chart from 'react-apexcharts';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner';\r\n\r\nvar dateFormat = require('dateformat');\r\n\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            opened: false,\r\n            statDataAdded: undefined,\r\n            statDataRemoved: undefined,\r\n            statDataDate: undefined,\r\n            statSubViews: undefined,\r\n            statDubViews: undefined,\r\n            statViewsPoints:undefined\r\n        };\r\n        this.click = this.click.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened) {\r\n            this.setState({statDataAdded: undefined, statDataRemoved: undefined, statDataDate: undefined})\r\n            let json = await this.props.statistic(this.props.data.anime_id);\r\n            let added = [];\r\n            let removed = [];\r\n            let axis = [];\r\n            json.stat.forEach(function (item, i, arr) {\r\n                added.push(item.added);\r\n                removed.push(item.removed);\r\n                axis.push(dateFormat(Date.parse(item.date), \"dd.mm\"));\r\n            });\r\n            let view_points = [];\r\n            let sub_views = [];\r\n            json.sub_view.forEach(function (item, i, arr) {\r\n                sub_views.push([item.num,item.view]);\r\n                if (!view_points.includes(item.num)){\r\n                    view_points.push(item.num);\r\n                }\r\n            });\r\n            sub_views.reverse();\r\n            let dub_views = [];\r\n            json.dub_view.forEach(function (item, i, arr) {\r\n                dub_views.push([item.num,item.view]);\r\n                if (!view_points.includes(item.num)){\r\n                    view_points.push(item.num);\r\n                }\r\n            });\r\n            dub_views.reverse();\r\n            view_points.sort(function(a,b){return a - b;});\r\n            console.log(view_points);\r\n            this.setState({\r\n                statDataAdded: added,\r\n                statDataRemoved: removed,\r\n                statDataDate: axis,\r\n                statSubViews: sub_views,\r\n                statDubViews: dub_views,\r\n                statViewsPoints: view_points\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.props.resize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\" + this.props.data.anime_id}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{this.props.data.anime_name}</div>\r\n                            <div className=\"statisticRowProgressContainer\">\r\n                                <Progress value={100 * this.props.data.total / this.props.maxVotes}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <Counter type=\"primary\">{this.props.data.sub}</Counter>\r\n                        <Counter>{this.props.data.dub}</Counter>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\"\r\n                     style={{\"display\": (this.state.opened) ? \"flex\" : \"none\", \"minHeight\": \"10px\", \"flexDirection\":\"column\"}}>\r\n                    {this.state.statDataAdded === undefined && this.state.statDataRemoved === undefined &&\r\n                    <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                    {this.state.statDataAdded !== undefined && this.state.statDataRemoved !== undefined &&\r\n                    <Chart type=\"line\" width=\"100%\" height=\"250px\" series={[\r\n                        {name: \"Подписались\", data: this.state.statDataAdded},\r\n                        {name: \"Отписались\", data: this.state.statDataRemoved},\r\n                    ]}\r\n                           options={{\r\n                               chart: {\r\n                                   background: \"var(--background_light)\",\r\n                                   foreColor: \"var(--accent)\",\r\n                                   defaultLocale: \"en\",\r\n\r\n                                   toolbar: {\r\n                                       show: false\r\n                                   },\r\n                                   animations: {\r\n                                       enabled: false\r\n                                   }\r\n                               },\r\n                               title:{\r\n                                   text:\"Динамика подписок\",\r\n                                   align:\"center\",\r\n                                   margin: 0\r\n                               },\r\n                               dataLabels: {\r\n                                   enabled: true,\r\n                               },\r\n                               tooltip: {\r\n                                   enabled: false,\r\n                                   shared: false,\r\n                                   marker: {\r\n                                       show: false\r\n                                   }\r\n                               },\r\n                               labels: this.state.statDataDate,\r\n                               stroke: {\r\n                                   curve: 'smooth',\r\n                                   width: '2'\r\n                               },\r\n                               xaxis: {\r\n                                   //type:'datetime',\r\n                                   labels: {\r\n                                       showDuplicates: true\r\n                                   },\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n\r\n                               },\r\n                               yaxis: {\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   }\r\n                               }\r\n                           }}\r\n                    />}\r\n                    { ((this.state.statSubViews !== undefined && this.state.statSubViews.length>0) || (this.state.statDubViews !== undefined && this.state.statDubViews.length>0)) &&\r\n\r\n                    <Chart type=\"line\" width=\"100%\" height=\"250px\"\r\n                           series={[\r\n                               {name:\"Субтитры\", data: this.state.statSubViews},\r\n                               {name:\"Озвучка\", data: this.state.statDubViews},\r\n                           ]}\r\n                           options={{\r\n                               chart: {\r\n                                   background: \"var(--background_light)\",\r\n                                   foreColor: \"var(--accent)\",\r\n                                   defaultLocale: \"en\",\r\n\r\n                                   toolbar: {\r\n                                       show: false\r\n                                   },\r\n                                   animations: {\r\n                                       enabled: false\r\n                                   }\r\n                               },\r\n                               title:{\r\n                                    text:\"Просмотры сайт\",\r\n                                    align:\"center\",\r\n                                    margin: 0\r\n                               },\r\n                               tooltip: {\r\n                                   enabled: false,\r\n                                   shared: false,\r\n                                   marker: {\r\n                                       show: false\r\n                                   }\r\n                               },\r\n                               stroke: {\r\n                                   curve: 'smooth',\r\n                                   width: '2'\r\n                               },\r\n                               //labels:this.state.statViewsPoints,\r\n                               xaxis: {\r\n                                   type:\"category\",\r\n                                   tickAmount:this.state.statViewsPoints[this.state.statViewsPoints.length-1]-this.state.statViewsPoints[0],\r\n                                   min:this.state.statViewsPoints[0],\r\n                                   max:this.state.statViewsPoints[this.state.statViewsPoints.length-1],\r\n                                   labels: {\r\n                                       show: true,\r\n                                       showDuplicates: true,\r\n                                       hideOverlappingLabels: false\r\n                                   },\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n                                   forceNiceScale: true\r\n                               },\r\n                               yaxis: {\r\n                                   tooltip: {\r\n                                       enabled: false\r\n                                   },\r\n                                   min: 0,\r\n                                   forceNiceScale: true\r\n                               }\r\n                           }}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport StatisticBlock from \"./StatisticBlock\";\r\nclass StatisticPanel extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize,300);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"} key={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner size=\"large\"/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <StatisticBlock key={\"sb_\"+item.anime_id} data={item} maxVotes={this.state.maxVotes} resize={this.props.resize} statistic={this.props.statistic}/>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticPanel","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport SubscribePanel from './common/SubscribePanel'\nimport connect from '@vkontakte/vk-bridge'\nimport StatisticPanel from \"./common/StatisticPanel\";\nimport Alert from \"@vkontakte/vkui/dist/components/Alert/Alert\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\nconst reqStatisticTitleUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/title/%s';\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get';\nconst reqSubscribeOldList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/get/old';\nconst reqSubscribeClear = 'https://api.sovetromantica.com/api/v1/notify/vkapp/clear';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            urlData: data,\n            popout: null,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n        this.switchSubscribeStatus = this.switchSubscribeStatus.bind(this);\n        this.getSubscribeList = this.getSubscribeList.bind(this);\n        this.clearSubscriptions = this.clearSubscriptions.bind(this);\n        this.clearSubscriptionsLaunch = this.clearSubscriptionsLaunch.bind(this);\n        this.closePopout = this.closePopout.bind(this);\n        this.getStatistic = this.getStatistic.bind(this);\n\n        this.height = 0;\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            if (hash.mode === 'subscribe' || hash.mode === 'statistic_full' || hash.mode === 'statistic_cur') {\n                this.state.mode = hash.mode;\n            }\n\n        }\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        if (this.state.rights === 'editor' || this.state.rights === 'admin') {\n            let hash = queryString.parse(window.location.hash);\n            hash.mode = e.currentTarget.dataset.mode;\n            connect.send(\"VKWebAppSetLocation\", {\"location\": queryString.stringify(hash)});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.resizeVkIframe();\n    }\n\n    componentDidMount() {\n        this.resizeVkIframe();\n    }\n\n\n    resizeVkIframe() {\n        if (this.state.clientType === 'desktop_web') {\n            if(document.getElementById(this.state.mode + \"_size\")!=undefined){\n                let height = document.getElementById(this.state.mode + \"_size\").scrollHeight + 110;\n                if (this.height !== height) {\n                    this.height = height;\n                    connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\": height});\n                }\n            }\n\n\n        }\n    }\n\n    async getSubscribeList(type = 'current') {\n        let resp = await fetch((type === 'current') ? reqSubscribeList : reqSubscribeOldList, {\n            method: 'POST',\n            body: this.state.urlData\n        });\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        return json;\n        //this.resizeVkIframe();\n    }\n\n    async getStatistic(titleId = 0) {\n        if(titleId===0){\n            return undefined;\n        }\n        let resp = await fetch(sprintf(reqStatisticTitleUrl, titleId), {\n            method: 'POST',\n            body: this.state.urlData\n        });\n        return await resp.json();\n    }\n\n    async clearSubscriptions() {\n        await fetch(reqSubscribeClear, {method: 'POST', body: this.state.urlData});\n    }\n\n    clearSubscriptionsLaunch(returnFnc) {\n        this.setState({\n            popout:\n                <Alert actions={[\n                    {\n                        title: \"Удалить\",\n                        autoclose: true,\n                        style: \"destructive\",\n                        action:returnFnc\n                    },\n                    {\n                        title: \"Отмена\",\n                        autoclose: true,\n                        style: \"cancel\"\n                    }]}\n                onClose={this.closePopout}>\n                    <h2>Подтвердите действие</h2>\n                    <p>Вы уверены, что хотите удалить все уведомления? <br/>Будут удалены все текущие, а также старые подписки. <br/>Вы перестаните получать уведомления о новых сериях.</p>\n                </Alert>\n        })\n    }\n\n    closePopout(e){\n        console.log(e);\n        this.setState({popout: null});\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode} popout={this.state.popout}>\n\n                    <Panel id=\"subscribe\">\n\n                        <Header rights={this.state.rights} mode=\"subscribe\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n\n                        <SubscribePanel switch={this.switchSubscribeStatus} resize={this.resizeVkIframe}\n                                        subscribe={this.getSubscribeList} client={this.state.clientType}\n                                        rights={this.state.rights} clearDisplay={this.clearSubscriptionsLaunch} clear={this.clearSubscriptions}/>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode=\"statistic_full\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe} statistic={this.getStatistic}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode=\"statistic_cur\" select={this.selectScreen}\n                                client={this.state.clientType}/>\n                        <StatisticPanel minimumId=\"1118\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe} statistic={this.getStatistic}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es/map';\nimport 'core-js/es/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-bridge';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}