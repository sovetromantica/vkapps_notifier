{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/StatisticBlock.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","dist_vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","imageLoading","click","clickButton","imageFinishLoad","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","prevProps","prevState","snapshot","setTimeout","resize","status","switching","Spinner_default","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","fire_default","Button_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","onLoad","map","item","show_vk","Link_default","href","vk_link","key","creator_id","nickname","reduce","prev","curr","component","StatisticBlock","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","id","PanelSpinner_default","Progress_default","value","Counter_default","sub","dub","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","subscribeTitles","urlData","loading","selectScreen","resizeVkIframe","searchUpdate","currentTarget","dataset","document","getElementById","scrollHeight","method","body","titleId","titleType","toLowerCase","indexOf","Root_default","activeView","View_default","activePanel","Panel_default","common_Header","Search_default","onChange","common_SubscribeBlock","switchSubscribeStatus","common_StatisticBlock","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"2aAsFeA,cA7EX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAQT,EAAMS,OACdC,KAAMV,EAAMU,KACZC,QAAQ,EACRC,OAAQZ,EAAMY,QAElBX,EAAKY,cAAgBZ,EAAKY,cAAcC,KAAnBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KARNA,+EAYfG,KAAKY,SAAS,CAACL,QAASP,KAAKI,MAAMG,0CAG9B,IAAAM,EAAAb,KACL,MAA0B,WAAtBA,KAAKI,MAAMC,QAA6C,UAAtBL,KAAKI,MAAMC,OAEzCS,EAAAC,EAAAC,cAACC,EAAA,YAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,mBAAD,CAAoBC,MAAOJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,MAAmBK,QAASpB,KAAKS,eACnC,cAApBT,KAAKI,MAAME,KAAuB,qEAAc,KAC5B,mBAApBN,KAAKI,MAAME,KAA4B,+DAAa,KAChC,kBAApBN,KAAKI,MAAME,KAA2B,4EAAgB,MAE3DQ,EAAAC,EAAAC,cAACC,EAAA,cAAD,CAAeV,OAAQP,KAAKI,MAAMG,OAAQc,QAASrB,KAAKS,eACpDK,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACIK,OAAQR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,MACRS,aAAkC,cAApBxB,KAAKI,MAAME,KAAuBQ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAYW,KAAK,kBAC7DZ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,MAAO,UACxBR,QAAS,SAACS,GACNhB,EAAKD,SAAS,CAACL,QAASM,EAAKT,MAAMG,SACnCM,EAAKjB,MAAMkC,OAAOD,IAEtBE,YAAU,aARd,sEAYAjB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACIK,OAAQR,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,MACRS,aAAkC,mBAApBxB,KAAKI,MAAME,KACrBQ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAYW,KAAK,kBAAoBZ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,MAAO,UAC7DR,QAAS,SAACS,GACNhB,EAAKD,SAAS,CAACL,QAASM,EAAKT,MAAMG,SACnCM,EAAKjB,MAAMkC,OAAOD,IAEtBE,YAAU,kBARd,gEAYAjB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACIK,OAAQR,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,MACRS,aAAkC,kBAApBxB,KAAKI,MAAME,KACrBQ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAYW,KAAK,kBAAoBZ,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,MAAO,UAC7DR,QAAS,SAACS,GACNhB,EAAKD,SAAS,CAACL,QAASM,EAAKT,MAAMG,SACnCM,EAAKjB,MAAMkC,OAAOD,IAEtBE,YAAU,iBARd,gFAmBRjB,EAAAC,EAAAC,cAACC,EAAA,YAAD,kFAtECgB,IAAMC,kICIvBC,UAAUC,EAAQ,IAAcD,SAK9BE,EAAY,oBAoPHC,eAhPX,SAAAA,EAAY1C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACfzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,KAAMJ,KACDQ,MAAQ,CACTmC,QAAS3C,EAAM4C,MAAMC,SACrBC,UAAW9C,EAAM4C,MAAMG,WACvBC,aAAchD,EAAM4C,MAAMK,eAC1BC,QAASlD,EAAM4C,MAAMO,SACrBC,UAAWpD,EAAM4C,MAAMS,WACvBC,UAAWtD,EAAM4C,MAAMW,WACvBC,SAAUxD,EAAM4C,MAAMY,SACtBC,eAAWC,EACX/C,QAAQ,EACRgD,OAAQ3D,EAAM4C,MAAMe,OACpBC,cAAc,EACdC,cAAc,EACdC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,mBAAoB,GACpBC,cAAe,GACfC,YAAanE,EAAM4C,MAAMwB,WACzBC,QAASrE,EAAM4C,MAAM0B,OACrBC,QAASvE,EAAM4C,MAAM4B,QACrBC,OAAQzE,EAAM4C,MAAM8B,MACpBC,cAAc,GAGlB1E,EAAK2E,MAAQ3E,EAAK2E,MAAM9D,KAAXZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACbA,EAAK4E,YAAc5E,EAAK4E,YAAY/D,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACnBA,EAAK6E,gBAAkB7E,EAAK6E,gBAAgBhE,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KA7BRA,6GAgCPgC,kFACR7B,KAAKY,SAAS,CAACL,QAASP,KAAKI,MAAMG,SAC9BP,KAAKI,MAAMG,aAAmC+C,IAAzBtD,KAAKI,MAAMiD,WAAkD,IAAvBrD,KAAKI,MAAM0C,yCACtD6B,MAAMxC,EA1CN,8CA0CoCnC,KAAKI,MAAM0C,wBAA5D8B,kBACaA,EAAKC,cAEtB,IAASC,KAFLD,SACAE,EAAS,GACEF,EAAKE,OAChBA,EAAOC,KAAKH,EAAKE,OAAOD,GAAIG,SAEhCjF,KAAKY,SAAS,CACVyC,UAAWwB,EACXnB,cAAevB,EAjDD,0BAiDgC0C,EAAKK,MAAMC,SACzDxB,UAAWkB,EAAKO,iBAAiBC,QAAQ,YAAa,IACtDzB,YAAamB,EAAOO,KAAK,MACzBzB,mBAAoB1B,EApDN,0BAoDqC0C,EAAKU,KACxDzB,cAAe3B,EApDX,sCAoDgCnC,KAAKI,MAAMmC,2LAQzCV,EAAG2D,gFACjB,IACI3D,EAAE4D,kBACJ,MAAOC,SAEK,IAATF,IAAyC,IAA1BxF,KAAKI,MAAM4C,YAA8C,IAA1BhD,KAAKI,MAAM4C,WAAgC,IAATwC,IAAyC,IAA1BxF,KAAKI,MAAM8C,YAA8C,IAA1BlD,KAAKI,MAAM8C,iCAClIsC,SACC,WAGA,iCAFDxF,KAAKY,SAAS,CAAC4C,cAAc,sCAG7BxD,KAAKY,SAAS,CAAC6C,cAAc,gDAGpBzD,KAAKJ,MAAM+F,OAAO3F,KAAKI,MAAMmC,QAASiD,cAC/B,KADpBZ,UACKgB,iCACGJ,SACC,YAKA,oCAJ4B,IAAzBxF,KAAKI,MAAM4C,WAA4C,IAAzBhD,KAAKI,MAAM4C,WACzChD,KAAKY,SAAS,CAACoC,UAAW,EAAIhD,KAAKI,MAAM4C,UAAWQ,cAAc,wCAIzC,IAAzBxD,KAAKI,MAAM8C,WAA4C,IAAzBlD,KAAKI,MAAM8C,WACzClD,KAAKY,SAAS,CAACsC,UAAW,EAAIlD,KAAKI,MAAM8C,UAAWO,cAAc,yDAKnD,IAApBmB,EAAKgB,YACZC,IAAQC,UAAU,SAACjE,GACf,OAAQA,EAAEkE,OAAOP,MACb,IAAK,uCACG3D,EAAEkE,OAAOC,KAAKC,QACdpF,EAAK4D,YAAY5C,EAAG2D,GAExB,MACJ,IAAK,uCACD,OAAQA,GACJ,KAAK,EACD3E,EAAKD,SAAS,CAAC4C,cAAc,IAC7B,MACJ,KAAK,EACD3C,EAAKD,SAAS,CAAC6C,cAAc,QAMjDoC,IAAQK,KAAK,iCAAkC,CAACC,SAAY,YAE5DC,QAAQC,IAAIzB,oJAQL0B,EAAWC,EAAWC,GACrCC,WAAWzG,KAAKJ,MAAM8G,SAAU,4CAGrBC,EAAQC,GACnB,GAAIA,EACA,MAAO,YAEX,OAAQD,GACJ,KAAM,EACF,MAAO,YACX,KAAK,EACD,MAAO,UACX,KAAK,EACD,MAAO,mDAKHA,EAAQC,GACpB,GAAIA,EACA,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAS+F,KAAM,UAE1B,OAAQH,GACJ,KAAK,EACD,OAAO7F,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,iDAMff,KAAKJ,MAAM8G,SACX1G,KAAKY,SAAS,CAAC2D,cAAc,qCAGxB,IAAAyC,EAAAhH,KACL,OACIc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,eAAe7F,QAASpB,KAAKwE,OACxC1D,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,yBACVjH,KAAKI,MAAMG,OAASO,EAAAC,EAAAC,cAACkG,EAAAnG,EAAD,CAAgBW,KAAK,kBACtCZ,EAAAC,EAAAC,cAACmG,EAAApG,EAAD,CAAeW,KAAK,mBAE5BZ,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,2BACXnG,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,uBACXnG,EAAAC,EAAAC,cAAA,OACIiG,UAAU,kCAA2D,MAAxBjH,KAAKI,MAAMgD,SACxDtC,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CAAYW,KAAM,UACNuF,UAAU,gCAAkC,KAH5D,IAGmEjH,KAAKI,MAAMsC,UAH9E,MAG4F1C,KAAKI,MAAMwC,cACvG9B,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,+BACXnG,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CAAQuG,WAAS,EACTC,MAAOvH,KAAKwH,eAAexH,KAAKI,MAAM4C,UAAWhD,KAAKI,MAAMoD,cAC5DlC,OAAQtB,KAAKyH,gBAAgBzH,KAAKI,MAAM4C,UAAWhD,KAAKI,MAAMoD,cAC9DpC,QAAS,SAACS,GAAD,OAAOmF,EAAKvC,YAAY5C,EAAG,IACpCoF,UAAU,sBAJlB,oDAKAnG,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CAAQuG,WAAS,EACTC,MAAOvH,KAAKwH,eAAexH,KAAKI,MAAM8C,UAAWlD,KAAKI,MAAMqD,cAC5DnC,OAAQtB,KAAKyH,gBAAgBzH,KAAKI,MAAM8C,UAAWlD,KAAKI,MAAMqD,cAC9DrC,QAAS,SAACS,GAAD,OAAOmF,EAAKvC,YAAY5C,EAAG,IACpCoF,UAAU,sBAJlB,kDAUhBnG,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,uBAAuBtF,MAAO,CAAC+F,QAAY1H,KAAKI,MAAMG,OAAU,OAAS,SAEpFO,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,MAAS,OAAQ+F,OAAU,OAAQD,QAAW,UAE3D5G,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAACC,MAAS,OAAQ8F,QAAW,OAAQE,eAAkB,sBACrCtE,IAAzBtD,KAAKI,MAAMiD,WACZvC,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAS+F,KAAK,QAAQG,UAAU,gCAChCnG,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,gCACVtF,MAAO,CAAC+F,aAAqCpE,IAAzBtD,KAAKI,MAAMiD,UAA2B,OAAS,OAEpEvC,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,6BACVjH,KAAKI,MAAMmE,cAAgBzD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAS+F,KAAK,UAC1ChG,EAAAC,EAAAC,cAAA,OAAK6G,IAAK7H,KAAKI,MAAMsD,cAAeuD,UAAU,+BACzCa,OAAQ9H,KAAK0E,mBAEtB5D,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,+BACe,KAAzBjH,KAAKI,MAAMuD,WAAoB7C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,+DAAkBhB,KAAKI,MAAMuD,WACxC,KAAzB3D,KAAKI,MAAMuD,WAAoB7C,EAAAC,EAAAC,cAAA,WACJ,KAA3BhB,KAAKI,MAAMwD,aAAsB9C,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,6CAAehB,KAAKI,MAAMwD,aACrC,KAA3B5D,KAAKI,MAAMwD,aAAsB9C,EAAAC,EAAAC,cAAA,WACP,MAA1BhB,KAAKI,MAAM2D,aACZjD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,iFAAqBhB,KAAKI,MAAM2D,YAAYgE,IAAI,SAAAC,GAAI,OACnC,IAAjBA,EAAKC,QAAiBnH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAMoH,KAAMhG,EAAQE,EAAW2F,EAAKI,SAC9BnB,UAAU,gCACVoB,IAAK,KAAOL,EAAKM,YAAaN,EAAKO,UAAmBP,EAAKO,WACzFC,OAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,MAChB,MAAtB1I,KAAKI,MAAM6D,SAAmBnD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,qEAAmBhB,KAAKI,MAAM6D,QAAQ8D,IAAI,SAAAC,GAAI,OAC5D,IAAjBA,EAAKC,QAAiBnH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAMoH,KAAMhG,EAAQE,EAAW2F,EAAKI,SAC9BnB,UAAU,gCACVoB,IAAK,KAAOL,EAAKM,YAAaN,EAAKO,UAAmBP,EAAKO,WACzFC,OAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,MAChB,MAAtB1I,KAAKI,MAAM+D,SAAmBrD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,yDAAiBhB,KAAKI,MAAM+D,QAAQ4D,IAAI,SAAAC,GAAI,OAC1D,IAAjBA,EAAKC,QAAiBnH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAMoH,KAAMhG,EAAQE,EAAW2F,EAAKI,SAC9BnB,UAAU,gCACVoB,IAAK,KAAOL,EAAKM,YAAaN,EAAKO,UAAmBP,EAAKO,WACzFC,OAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,MACjB,MAArB1I,KAAKI,MAAMiE,QAAkBvD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,yDAAiBhB,KAAKI,MAAMiE,OAAO0D,IAAI,SAAAC,GAAI,OACxD,IAAjBA,EAAKC,QAAiBnH,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAMoH,KAAMhG,EAAQE,EAAW2F,EAAKI,SAC9BnB,UAAU,gCACVoB,IAAK,MAAQL,EAAKM,YAAaN,EAAKO,UAAmBP,EAAKO,WAC1FC,OAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,OACX,MAA1B1I,KAAKI,MAAM2D,aAA6C,MAAtB/D,KAAKI,MAAM6D,SAAyC,MAAtBjE,KAAKI,MAAM+D,SAAwC,MAArBnE,KAAKI,MAAMiE,SAC3GvD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,qCACXnG,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CAAQuG,WAAS,EAACa,KAAMnI,KAAKI,MAAMyD,mBAAoB8E,UAAU,IACzD1B,UAAU,sBADlB,aAEAnG,EAAAC,EAAAC,cAACqG,EAAAtG,EAAD,CAAQuG,WAAS,EAACa,KAAMnI,KAAKI,MAAM0D,cAAe6E,UAAU,IACpD1B,UAAU,sBADlB,yCAnOPhF,IAAMC,mDCoCpB0G,eAhDX,SAAAA,EAAYhJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4I,IACf/I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8I,GAAAzI,KAAAH,KAAMJ,KACDQ,MAAO,CACRyI,UAAWhJ,EAAKD,MAAMiJ,UACtBC,cAAUxF,EACVyF,SAAU,GALClJ,iNASAG,KAAKJ,MAAMoJ,OAAOhJ,KAAKI,MAAMyI,kBAAxChE,SACAoE,MAAMC,QAAQrE,KACdA,EAAKsE,KAAK,SAASpI,EAAEqI,GAAG,OAAOA,EAAEC,MAAMtI,EAAEsI,QACzCrJ,KAAKY,SAAS,CAACkI,SAASjE,EAAMkE,SAASlE,EAAK,GAAGwE,4IAM9C,IAAAxI,EAAAb,KACL,OAEIc,EAAAC,EAAAC,cAAA,OAAKsI,GAAItJ,KAAKJ,MAAMU,KAAK,cACCgD,GAArBtD,KAAKI,MAAM0I,UAAuBhI,EAAAC,EAAAC,cAACuI,EAAAxI,EAAD,WACbuC,GAArBtD,KAAKI,MAAM0I,UAAuB9I,KAAKI,MAAM0I,SAASf,IAAI,SAACC,GAAD,OACvDlH,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,eAAe7F,QAASP,EAAK2D,MAAO6D,IAAK,OAAOL,EAAKvF,UAChE3B,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,2BACXnG,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,uBACXnG,EAAAC,EAAAC,cAAA,OACIiG,UAAU,kCAAkCe,EAAKrF,YACrD7B,EAAAC,EAAAC,cAAA,OAAKiG,UAAU,iCACXnG,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,CAAU0I,MAAO,IAAIzB,EAAKqB,MAAMxI,EAAKT,MAAM2I,cAKvDjI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0I,GAAA3I,EAAD,CAASyE,KAAK,WAAWwC,EAAK2B,KAC9B7I,EAAAC,EAAAC,cAAC0I,GAAA3I,EAAD,KAAUiH,EAAK4B,iBAxCd3H,IAAMC,+BCY/BC,GAAUC,EAAQ,IAAcD,QA+IrB0H,eAvIX,SAAAA,EAAYjK,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,GACfhK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+J,GAAA1J,KAAAH,KAAMJ,IACN,IAAIkK,EAASC,IAAYC,MAAMC,OAAOC,SAASC,QAC3CnE,EAAO,IAAIoE,SACf,IAAK,IAAIC,KAAOP,EACZ9D,EAAKsE,OAAOD,EAAKP,EAAOO,IALb,OAOfxK,EAAKO,MAAQ,CACTE,KAAM,YACND,OAAQyJ,EAAOS,qBACfC,OAAQV,EAAOW,WACfC,WAAYZ,EAAOa,YACnBC,gBAAiB,GACjBC,QAAS7E,EACT8E,SAAS,GAEbjL,EAAKkL,aAAelL,EAAKkL,aAAarK,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAKmL,eAAiBnL,EAAKmL,eAAetK,KAApBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACtBA,EAAKoL,aAAepL,EAAKoL,aAAavK,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAK8H,OAAS,EAnBC9H,4EAwBNgC,GACT7B,KAAKY,SAAS,CAACN,KAAMuB,EAAEqJ,cAAcC,QAAQ7K,kDAK9BgG,EAAWC,EAAWC,GACrCC,WAAWzG,KAAKgL,eAAgB,8CAKhC,GAA8B,gBAA1BhL,KAAKI,MAAMsK,WAA8B,CACzC,IAAI/C,EAASyD,SAASC,eAAerL,KAAKI,MAAME,KAAO,SAASgL,aAAe,GAC3EtL,KAAK2H,SAAWA,IAChB3H,KAAK2H,OAASA,EACd9B,IAAQK,KAAK,uBAAwB,CAACtE,MAAS,IAAK+F,OAAUA,oLAOrDhD,MAAMxC,GApDN,4DAoDgCnC,KAAKI,MAAMoK,QAAS,CAACe,OAAQ,OAAQC,KAAMxL,KAAKI,MAAMyK,wBAAnGjG,kBACaA,EAAKC,cACtB,IAASC,KADLD,SAEAA,EAAKC,GAAIvB,QAAS,kBAEhBvD,KAAKY,SAAS,CAACgK,gBAAiB/F,EAAMiG,SAAS,WACrD9K,KAAKgL,0MAGmBS,EAASC,8EACjB,IAAZD,QAA6BnI,IAAZmI,QAAuCnI,IAAdoI,mCACzB/G,MAAMxC,GA9DX,qEA8DoCnC,KAAKI,MAAMoK,OAAQiB,EAASC,GAAY,CACpFH,OAAQ,OACRC,KAAMxL,KAAKI,MAAMyK,wBAFjBjG,kBAIaA,EAAKC,qBAAlBA,2BACGA,WAEPuB,QAAQC,IAAI,mNAIAwC,uFACCvF,GAAbuF,IACAA,EAAY,YAEClE,MAAMxC,GA5EP,kEA4EgC0G,GAAY,CAAC0C,OAAQ,OAAQC,KAAMxL,KAAKI,MAAMyK,wBAA1FjG,kBACaA,EAAKC,qBAAlBA,2BACGA,2IAGEhD,GACT,IAAK,IAAIiD,KAAM9E,KAAKI,MAAMwK,iBACoE,IAAtF5K,KAAKI,MAAMwK,gBAAgB9F,GAAInC,WAAWgJ,cAAcC,QAAQ/J,EAAE8J,iBAAmH,IAA1F3L,KAAKI,MAAMwK,gBAAgB9F,GAAIjC,eAAe8I,cAAcC,QAAQ/J,EAAE8J,eACjK3L,KAAKI,MAAMwK,gBAAgB9F,GAAIvB,QAAS,EAExCvD,KAAKI,MAAMwK,gBAAgB9F,GAAIvB,QAAS,EAE5CvD,KAAKY,SAAS,CAACgK,gBAAiB5K,KAAKI,MAAMwK,mDAK1C,IAAA/J,EAAAb,KACL,OAEIc,EAAAC,EAAAC,cAAC6K,EAAA9K,EAAD,CAAM+K,WAAW,YACbhL,EAAAC,EAAAC,cAAC+K,EAAAhL,EAAD,CAAMuI,GAAG,WAAW0C,YAAahM,KAAKI,MAAME,MAExCQ,EAAAC,EAAAC,cAACiL,EAAAlL,EAAD,CAAOuI,GAAG,aACNxI,EAAAC,EAAAC,cAAA,OAAKsI,GAAG,kBACJxI,EAAAC,EAAAC,cAACkL,EAAD,CAAQ7L,OAAQL,KAAKI,MAAMC,OAAQC,KAAMN,KAAKI,MAAME,KAAMwB,OAAQ9B,KAAK+K,aAC/DvK,OAAQR,KAAKI,MAAMsK,aAC3B5J,EAAAC,EAAAC,cAACmL,GAAApL,EAAD,CAAQqL,SAAUpM,KAAKiL,eACtBjL,KAAKI,MAAM0K,SAAWhK,EAAAC,EAAAC,cAACuI,EAAAxI,EAAD,MAGtBf,KAAKI,MAAMwK,gBAAgB7C,IAAI,SAAAC,GAAI,OAC/BA,EAAKzE,OACFzC,EAAAC,EAAAC,cAACqL,GAAD,CAAgB7J,MAAOwF,EAAMrC,OAAQ9E,EAAKyL,sBAAsB5L,KAAKG,GACrDwH,IAAK,OAASL,EAAKvF,SAAUiE,OAAQ7F,EAAKmK,iBAC1D,SAMhBlK,EAAAC,EAAAC,cAACiL,EAAAlL,EAAD,CAAOuI,GAAG,kBACNxI,EAAAC,EAAAC,cAACkL,EAAD,CAAQ7L,OAAQL,KAAKI,MAAMC,OAAQC,KAAMN,KAAKI,MAAME,KAAMwB,OAAQ9B,KAAK+K,eACvEjK,EAAAC,EAAAC,cAACuL,GAAD,CAAgB1D,UAAU,IAAIG,OAAQhJ,KAAKwM,cAAc9L,KAAKV,MAC9CQ,OAAQR,KAAKI,MAAMsK,WAAYpK,KAAMN,KAAKI,MAAME,KAChDoG,OAAQ1G,KAAKgL,kBAEjClK,EAAAC,EAAAC,cAACiL,EAAAlL,EAAD,CAAOuI,GAAG,iBACNxI,EAAAC,EAAAC,cAACkL,EAAD,CAAQ7L,OAAQL,KAAKI,MAAMC,OAAQC,KAAMN,KAAKI,MAAME,KAAMwB,OAAQ9B,KAAK+K,eACvEjK,EAAAC,EAAAC,cAACuL,GAAD,CAAgB1D,UAAU,MAAMG,OAAQhJ,KAAKwM,cAAc9L,KAAKV,MAChDQ,OAAQR,KAAKI,MAAMsK,WAAYpK,KAAMN,KAAKI,MAAME,KAChDoG,OAAQ1G,KAAKgL,2BA7HnC/I,IAAMC,WCyCJuK,QAAqC,cAA7BxC,OAAOC,SAASwC,UAEd,UAA7BzC,OAAOC,SAASwC,UAEhBzC,OAAOC,SAASwC,SAASC,MAAM,2DC3DhC9G,IAAQC,UAAU,SAACjE,GACf,OAAQA,EAAEkE,OAAOP,MACb,IAAK,uBACD,IAAIoH,EAAkBxB,SAASyB,gBAAgB,UAC/CD,EAAgBnD,MAAQ5H,EAAEkE,OAAOC,KAAK8G,OAASjL,EAAEkE,OAAOC,KAAK8G,OAAS,eACtE1B,SAASI,KAAKuB,WAAWC,aAAaJ,GACtC,MAEJ,QACIxG,QAAQC,IAAIxE,EAAEkE,OAAOP,SAKjCK,IAAQK,KAAK,eAAgB,IAW7B+G,IAASC,OAAOpM,EAAAC,EAAAC,cAACmM,GAAD,MAAQ/B,SAASC,eAAe","file":"static/js/main.39a76951.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления':null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика':null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон':null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica/com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink: '',\r\n            titleSiteLink: '',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n            imageLoading: true,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n        this.imageFinishLoad = this.imageFinishLoad.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres = [];\r\n            for (let el in json.genres) {\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc: json.description_html.replace(/<[^>]*>/gm, ''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try {\r\n            e.stopPropagation();\r\n        } catch (ex) {\r\n        }\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            } else if (resp.error_code === 7) {\r\n                connect.subscribe((e) => {\r\n                    switch (e.detail.type) {\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if (e.detail.data.result) {\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            } else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(), 300);\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    imageFinishLoad() {\r\n        this.props.resize();\r\n        this.setState({imageLoading: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"subscribeRow\" onClick={this.click}>\r\n                    <div className=\"subscribeIconExtender\">\r\n                        {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                            <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                    </div>\r\n                    <div className=\"subscribeRowFullContent\">\r\n                        <div className=\"subscribeRowContent\">\r\n                            <div\r\n                                className=\"subscribeRowTitleNameContainer\">{(this.state.priority === 10000) ?\r\n                                <Icon12Fire fill={\"#f93522\"}\r\n                                            className=\"fullTextInformationIconFire\"/> : null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                            <div className=\"subscribeRowButtonContainer\">\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 0)}\r\n                                        className=\"subscribeRowButton\">Субтитры</Button>\r\n                                <Button stretched\r\n                                        level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                        onClick={(e) => this.clickButton(e, 1)}\r\n                                        className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                    <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                    </div>\r\n                    <div style={{\"width\": \"100%\", \"display\": \"flex\", \"justifyContent\": \"space-around\"}}>\r\n                        {this.state.shikiResp === undefined &&\r\n                        <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                        <div className=\"fullTitleInformationContainer\"\r\n                             style={{\"display\": (this.state.shikiResp === undefined) ? \"none\" : null}}>\r\n\r\n                            <div className=\"fullTitleInformationImage\">\r\n                                {this.state.imageLoading && <Spinner size=\"large\"/>}\r\n                                <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"\r\n                                     onLoad={this.imageFinishLoad}/>\r\n                            </div>\r\n                            <div className=\"fullTitleInformationContent\">\r\n                                {this.state.titleDesc !== '' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                {this.state.titleDesc !== '' && <hr/>}\r\n                                {this.state.titleGenres !== '' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                {this.state.titleGenres !== '' && <hr/>}\r\n                                {this.state.translators != null &&\r\n                                <div><b>Переводчики: </b>{this.state.translators.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 key={\"t_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.editors != null && <div><b>Редакторы: </b>{this.state.editors.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 key={\"e_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.dubbers != null && <div><b>Дабберы: </b>{this.state.dubbers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 key={\"d_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {this.state.timers != null && <div><b>Таймеры: </b>{this.state.timers.map(item => (\r\n                                    (item.show_vk === 1) ? <Link href={sprintf(vkBaseUrl, item.vk_link)}\r\n                                                                 className=\"fullTextInformationAuthorLink\"\r\n                                                                 key={\"tm_\" + item.creator_id}>{item.nickname}</Link> : item.nickname\r\n                                )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                {(this.state.translators != null || this.state.editors != null || this.state.dubbers != null || this.state.timers != null) &&\r\n                                <hr/>}\r\n                                <div className=\"fullTitleInformationContentButton\">\r\n                                    <Button stretched href={this.state.titleShikimoriLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\">Shikimori</Button>\r\n                                    <Button stretched href={this.state.titleSiteLink} component=\"a\"\r\n                                            className=\"subscribeRowButton\">Сайт</Button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n        //this.props.resize();\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\"+item.anime_id}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Counter type=\"primary\">{item.sub}</Counter>\r\n                            <Counter>{item.dub}</Counter>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport StatisticBlock from \"./common/StatisticBlock\";\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            subscribeTitles: [],\n            urlData: data,\n            loading: true,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n        this.searchUpdate = this.searchUpdate.bind(this);\n        this.height = 0;\n\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        //setTimeout(this.resizeVkIframe,1000)\n        ;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        setTimeout(this.resizeVkIframe, 800)\n    }\n\n\n    resizeVkIframe() {\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode + \"_size\").scrollHeight + 50;\n            if (this.height !== height) {\n                this.height = height;\n                connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\": height});\n            }\n\n        }\n    }\n\n    async componentDidMount() {\n        let resp = await fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        await this.setState({subscribeTitles: json, loading: false});\n        this.resizeVkIframe();\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n    searchUpdate(e) {\n        for (let el in this.state.subscribeTitles) {\n            if (this.state.subscribeTitles[el].anime_name.toLowerCase().indexOf(e.toLowerCase()) !== -1 || this.state.subscribeTitles[el].anime_name_rus.toLowerCase().indexOf(e.toLowerCase()) !== -1) {\n                this.state.subscribeTitles[el].showed = true;\n            } else {\n                this.state.subscribeTitles[el].showed = false;\n            }\n            this.setState({subscribeTitles: this.state.subscribeTitles});\n        }\n    }\n\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode}>\n\n                    <Panel id=\"subscribe\">\n                        <div id=\"subscribe_size\">\n                            <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}\n                                    client={this.state.clientType}/>\n                            <Search onChange={this.searchUpdate}/>\n                            {this.state.loading && <PanelSpinner/>}\n\n\n                            {this.state.subscribeTitles.map(item => (\n                                (item.showed) ?\n                                    <SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)}\n                                                    key={\"sub_\" + item.anime_id} resize={this.resizeVkIframe}/> :\n                                    null\n\n                            ))}\n                        </div>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"835\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode}\n                                        resize={this.resizeVkIframe}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}