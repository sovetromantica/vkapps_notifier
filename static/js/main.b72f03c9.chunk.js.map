{"version":3,"sources":["common/Header.js","common/SubscribeBlock.js","common/StatisticBlock.js","App.js","sw.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rights","mode","opened","client","toggleContext","bind","assertThisInitialized","setState","_this2","react_default","a","createElement","dist_vkui","aside","dropdown_default","onClick","onClose","before","notification_default","asideContent","done_default","fill","style","width","e","select","data-mode","poll_default","React","Component","sprintf","require","vkBaseUrl","SubscribeBlock","animeId","anime","anime_id","animeName","anime_name","animeNameRus","anime_name_rus","shikiId","shiki_id","subStatus","sub_status","dubStatus","dub_status","priority","shikiResp","undefined","showed","subSwitching","dubSwitching","titleImageUrl","titleDesc","titleGenres","titleShikimoriLink","titleSiteLink","translators","translator","editors","editor","dubbers","sounder","timers","timer","click","clickButton","fetch","resp","json","el","genres","push","russian","image","preview","description_html","replace","join","url","type","stopPropagation","ex","switch","error_code","connect","subscribe","detail","data","result","send","group_id","console","log","prevProps","prevState","snapshot","setTimeout","resize","status","switching","Spinner_default","size","_16_done_default","_this3","className","_24_dropdown_default","chevron_default","fire_default","Button_default","stretched","level","getButtonStyle","getBeforeSymbol","display","height","justifyContent","src","map","item","show_vk","Link_default","href","vk_link","key","creator_id","nickname","reduce","prev","curr","component","StatisticBlock","minimumId","statData","maxVotes","loader","Array","isArray","sort","b","total","id","PanelSpinner_default","Progress_default","value","Counter_default","sub","dub","App","params","queryString","parse","window","location","search","FormData","par","append","vk_viewer_group_role","userId","vk_user_id","clientType","vk_platform","subscribeTitles","urlData","loading","selectScreen","resizeVkIframe","currentTarget","dataset","document","getElementById","scrollHeight","method","body","titleId","titleType","Root_default","activeView","View_default","activePanel","Panel_default","common_Header","common_SubscribeBlock","switchSubscribeStatus","common_StatisticBlock","loadStatistic","Boolean","hostname","match","schemeAttribute","createAttribute","scheme","attributes","setNamedItem","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.b72f03c9.chunk.js","sourcesContent":["import {Cell, HeaderContext, List, PanelHeader, PanelHeaderContent} from \"@vkontakte/vkui\";\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon24Poll from '@vkontakte/icons/dist/24/poll';\r\nimport React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rights: props.rights,\r\n            mode: props.mode,\r\n            opened: false,\r\n            client: props.client,\r\n        }\r\n        this.toggleContext = this.toggleContext.bind(this);\r\n    }\r\n\r\n    toggleContext() {\r\n        this.setState({opened: !this.state.opened});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.rights === \"editor\" || this.state.rights === \"admin\") {\r\n            return (\r\n                <PanelHeader>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown/>} onClick={this.toggleContext}>\r\n                        {this.state.mode === 'subscribe' ? 'Уведомления':null}\r\n                        {this.state.mode === 'statistic_full' ? 'Статистика':null}\r\n                        {this.state.mode === 'statistic_cur' ? 'Текущий сезон':null}\r\n                    </PanelHeaderContent>\r\n                    <HeaderContext opened={this.state.opened} onClose={this.toggleContext}>\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Notification/>}\r\n                                asideContent={this.state.mode === 'subscribe' ? <Icon24Done fill=\"var(--accent)\"/> :\r\n                                    <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"subscribe\"\r\n                            >\r\n                                Уведомления\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_full' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_full\"\r\n                            >\r\n                                Статистика\r\n                            </Cell>\r\n                            <Cell\r\n                                before={<Icon24Poll/>}\r\n                                asideContent={this.state.mode === 'statistic_cur' ?\r\n                                    <Icon24Done fill=\"var(--accent)\"/> : <div style={{width: '24px'}}/>}\r\n                                onClick={(e) => {\r\n                                    this.setState({opened: !this.state.opened});\r\n                                    this.props.select(e);\r\n                                }}\r\n                                data-mode=\"statistic_cur\"\r\n                            >\r\n                                Текущий сезон\r\n                            </Cell>\r\n\r\n                        </List>\r\n                    </HeaderContext>\r\n                </PanelHeader>\r\n            );\r\n\r\n        } else {\r\n            return (<PanelHeader>Уведомления</PanelHeader>);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button'\r\nimport Link from '@vkontakte/vkui/dist/components/Link/Link'\r\n\r\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\r\nimport Icon24Dropdown from '@vkontakte/icons/dist/24/dropdown';\r\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport '../css/main.css';\r\nimport connect from '@vkontakte/vkui-connect'\r\n\r\nvar sprintf = require('sprintf-js').sprintf;\r\n\r\nconst shikimoriGetAnimeUrl = \"https://sh.sovetromantica.com/api/animes/%s\"\r\nconst shikimoriImageBaseUrl = \"https://shikimori.one%s\"\r\nconst siteBaseUrl = \"https://sovetromantica/com/anime/%s\"\r\nconst vkBaseUrl = \"https://vk.com/%s\"\r\n\r\nclass SubscribeBlock extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animeId: props.anime.anime_id,\r\n            animeName: props.anime.anime_name,\r\n            animeNameRus: props.anime.anime_name_rus,\r\n            shikiId: props.anime.shiki_id,\r\n            subStatus: props.anime.sub_status,\r\n            dubStatus: props.anime.dub_status,\r\n            priority: props.anime.priority,\r\n            shikiResp: undefined,\r\n            opened: false,\r\n            showed: props.anime.showed,\r\n            subSwitching: false,\r\n            dubSwitching: false,\r\n            titleImageUrl: '',\r\n            titleDesc: '',\r\n            titleGenres: '',\r\n            titleShikimoriLink:'',\r\n            titleSiteLink:'',\r\n            translators: props.anime.translator,\r\n            editors: props.anime.editor,\r\n            dubbers: props.anime.sounder,\r\n            timers: props.anime.timer,\r\n        };\r\n\r\n        this.click = this.click.bind(this);\r\n        this.clickButton = this.clickButton.bind(this);\r\n    }\r\n\r\n    async click(e) {\r\n        this.setState({opened: !this.state.opened})\r\n        if (!this.state.opened && this.state.shikiResp === undefined && this.state.shikiId !== 0) {\r\n            let resp = await fetch(sprintf(shikimoriGetAnimeUrl, this.state.shikiId));\r\n            let json = await resp.json();\r\n            var genres=[];\r\n            for (let el in json.genres){\r\n                genres.push(json.genres[el].russian)\r\n            }\r\n            this.setState({\r\n                shikiResp: json,\r\n                titleImageUrl: sprintf(shikimoriImageBaseUrl, json.image.preview),\r\n                titleDesc:json.description_html.replace(/<[^>]*>/gm,''),\r\n                titleGenres: genres.join(', '),\r\n                titleShikimoriLink: sprintf(shikimoriImageBaseUrl, json.url),\r\n                titleSiteLink: sprintf(siteBaseUrl, this.state.animeId),\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async clickButton(e, type) {\r\n        try{\r\n            e.stopPropagation();\r\n        } catch(ex){}\r\n        if ((type === 0 && (this.state.subStatus !== -2 && this.state.subStatus !== -1)) || (type === 1 && (this.state.dubStatus !== -2 && this.state.dubStatus !== -1))) {\r\n            switch (type) {\r\n                case 0:\r\n                    this.setState({subSwitching: true});\r\n                    break;\r\n                case 1:\r\n                    this.setState({dubSwitching: true});\r\n                    break;\r\n            }\r\n            let resp = await this.props.switch(this.state.animeId, type)\r\n            if (resp.error_code === 0) {\r\n                switch (type) {\r\n                    case 0:\r\n                        if (this.state.subStatus === 1 || this.state.subStatus === 0) {\r\n                            this.setState({subStatus: 1 - this.state.subStatus, subSwitching: false})\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (this.state.dubStatus === 1 || this.state.dubStatus === 0) {\r\n                            this.setState({dubStatus: 1 - this.state.dubStatus, dubSwitching: false})\r\n                        }\r\n                        break;\r\n\r\n                }\r\n            }\r\n            else if (resp.error_code===7){\r\n                connect.subscribe((e)=>{\r\n                    switch(e.detail.type){\r\n                        case 'VKWebAppAllowMessagesFromGroupResult':\r\n                            if(e.detail.data.result){\r\n                                this.clickButton(e, type);\r\n                            }\r\n                            break;\r\n                        case 'VKWebAppAllowMessagesFromGroupFailed':\r\n                            switch (type) {\r\n                                case 0:\r\n                                    this.setState({subSwitching: false});\r\n                                    break;\r\n                                case 1:\r\n                                    this.setState({dubSwitching: false});\r\n                                    break;\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                connect.send(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": 33905270});\r\n            }\r\n            else {\r\n                console.log(resp);\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        setTimeout(this.props.resize(),300);\r\n    }\r\n\r\n    getButtonStyle(status, switching) {\r\n        if (switching) {\r\n            return \"secondary\";\r\n        }\r\n        switch (status) {\r\n            case -1:\r\n                return \"secondary\";\r\n            case 0:\r\n                return \"primary\";\r\n            case 1:\r\n                return \"outline\";\r\n\r\n        }\r\n    }\r\n\r\n    getBeforeSymbol(status, switching) {\r\n        if (switching) {\r\n            return <Spinner size={\"small\"}/>;\r\n        }\r\n        switch (status) {\r\n            case 1:\r\n                return <Icon16Done/>;\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showed) {\r\n            return (\r\n                <div>\r\n                    <div className=\"subscribeRow\" onClick={this.click}>\r\n                        <div className=\"subscribeIconExtender\">\r\n                            {this.state.opened ? <Icon24Dropdown fill=\"var(--accent)\"/> :\r\n                                <Icon24Chevron fill=\"var(--accent)\"/>}\r\n                        </div>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{(this.state.priority===10000)?<Icon12Fire fill={\"#f93522\"} className=\"fullTextInformationIconFire\"/>:null} {this.state.animeName} / {this.state.animeNameRus}</div>\r\n                                <div className=\"subscribeRowButtonContainer\">\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.subStatus, this.state.subSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.subStatus, this.state.subSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 0)}\r\n                                            className=\"subscribeRowButton\">Субтитры</Button>\r\n                                    <Button stretched\r\n                                            level={this.getButtonStyle(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            before={this.getBeforeSymbol(this.state.dubStatus, this.state.dubSwitching)}\r\n                                            onClick={(e) => this.clickButton(e, 1)}\r\n                                            className=\"subscribeRowButton\">Озвучка</Button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"fullTitleInformation\" style={{\"display\": (this.state.opened) ? \"flex\" : \"none\"}}>\r\n\r\n                        <div style={{\"width\": \"25px\", \"height\": \"100%\", \"display\": \"flex\"}}>\r\n                        </div>\r\n                        <div style={{\"width\":\"100%\",\"display\":\"flex\", \"justifyContent\":\"space-around\"}}>\r\n                            {this.state.shikiResp===undefined && <Spinner size=\"large\" className=\"fullTitleInformationSpinner\"/>}\r\n                            <div className=\"fullTitleInformationContainer\" style={{\"display\":(this.state.shikiResp===undefined)?\"none\":null}}>\r\n\r\n                                <div className=\"fullTitleInformationImage\" >\r\n                                    <img src={this.state.titleImageUrl} className=\"fullTitleInformationImageImg\"/>\r\n                                </div>\r\n                                <div className=\"fullTitleInformationContent\">\r\n                                    {this.state.titleDesc!=='' && <div><b>Описание: </b>{this.state.titleDesc}</div>}\r\n                                    {this.state.titleDesc!=='' && <hr/>}\r\n                                    {this.state.titleGenres!=='' && <div><b>Жанры: </b>{this.state.titleGenres}</div>}\r\n                                    {this.state.titleGenres!=='' && <hr/>}\r\n                                    {this.state.translators!=null && <div><b>Переводчики: </b>{this.state.translators.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"t_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.editors!=null && <div><b>Редакторы: </b>{this.state.editors.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"e_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.dubbers!=null && <div><b>Дабберы: </b>{this.state.dubbers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"d_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {this.state.timers!=null && <div><b>Таймеры: </b>{this.state.timers.map(item=>(\r\n                                        (item.show_vk===1)?<Link href={sprintf(vkBaseUrl, item.vk_link)} className=\"fullTextInformationAuthorLink\" key={\"tm_\"+item.creator_id}>{item.nickname}</Link>:item.nickname\r\n                                    )).reduce((prev, curr) => [prev, ', ', curr])}</div>}\r\n                                    {(this.state.translators!=null || this.state.editors!=null || this.state.dubbers!=null || this.state.timers!=null) && <hr/>}\r\n                                    <div className=\"fullTitleInformationContentButton\">\r\n                                        <Button stretched href={this.state.titleShikimoriLink} component=\"a\" className=\"subscribeRowButton\">Shikimori</Button>\r\n                                        <Button stretched href={this.state.titleSiteLink} component=\"a\" className=\"subscribeRowButton\">Сайт</Button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SubscribeBlock;","import React from 'react';\r\nimport Progress from '@vkontakte/vkui/dist/components/Progress/Progress'\r\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nclass StatisticBlock extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            minimumId: this.props.minimumId,\r\n            statData: undefined,\r\n            maxVotes: 0,\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let json=await this.props.loader(this.state.minimumId);\r\n        if (Array.isArray(json)){\r\n            json.sort(function(a,b){return b.total-a.total;});\r\n            this.setState({statData:json, maxVotes:json[0].total});\r\n        } else {\r\n\r\n        }\r\n        //this.props.resize();\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div id={this.props.mode+\"_size\"}>\r\n                {this.state.statData==undefined && <PanelSpinner/>}\r\n                {this.state.statData!=undefined && this.state.statData.map((item)=>(\r\n                    <div className=\"subscribeRow\" onClick={this.click} key={\"sub_\"+item.anime_id}>\r\n                        <div className=\"subscribeRowFullContent\">\r\n                            <div className=\"subscribeRowContent\">\r\n                                <div\r\n                                    className=\"subscribeRowTitleNameContainer\">{item.anime_name}</div>\r\n                                <div className=\"statisticRowProgressContainer\">\r\n                                    <Progress value={100*item.total/this.state.maxVotes}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <Counter type=\"primary\">{item.sub}</Counter>\r\n                            <Counter>{item.dub}</Counter>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default StatisticBlock","import React from 'react';\n//import connect from '@vkontakte/vkui-connect';\n\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel'\nimport Root from '@vkontakte/vkui/dist/components/Root/Root'\nimport View from '@vkontakte/vkui/dist/components/View/View'\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner'\nimport '@vkontakte/vkui/dist/vkui.css';\nimport queryString from 'query-string';\nimport Header from './common/Header'\nimport connect from '@vkontakte/vkui-connect'\nimport SubscribeBlock from \"./common/SubscribeBlock\";\nimport StatisticBlock from \"./common/StatisticBlock\";\n\n\nvar sprintf = require('sprintf-js').sprintf;\n\n\nconst reqSubscribeList = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/get';\nconst switchSubscribe = 'https://api.sovetromantica.com/api/v1/notify/vkapp/%s/switch/%s/%s';\nconst reqStatisticUrl = 'https://api.sovetromantica.com/api/v1/notify/vkapp/statistic/%s';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let params = queryString.parse(window.location.search);\n        let data = new FormData();\n        for (let par in params) {\n            data.append(par, params[par]);\n        }\n        this.state = {\n            mode: 'subscribe',\n            rights: params.vk_viewer_group_role,\n            userId: params.vk_user_id,\n            clientType: params.vk_platform,\n            subscribeTitles: [],\n            urlData: data,\n            loading: true,\n        };\n        this.selectScreen = this.selectScreen.bind(this);\n        this.resizeVkIframe = this.resizeVkIframe.bind(this);\n\n\n\n    }\n\n\n    selectScreen(e) {\n        this.setState({mode: e.currentTarget.dataset.mode});\n        //setTimeout(this.resizeVkIframe,1000)\n        ;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        setTimeout(this.resizeVkIframe,800)\n    }\n\n\n\n    resizeVkIframe(){\n        if (this.state.clientType === 'desktop_web') {\n            let height = document.getElementById(this.state.mode+\"_size\").scrollHeight+50;\n            connect.send('VKWebAppResizeWindow', {\"width\": 730, \"height\":height });\n        }\n    }\n\n    async componentDidMount() {\n        let resp = await fetch(sprintf(reqSubscribeList, this.state.userId), {method: 'POST', body: this.state.urlData})\n        let json = await resp.json();\n        for (let el in json) {\n            json[el].showed = true;\n        }\n        await this.setState({subscribeTitles: json, loading: false});\n        this.resizeVkIframe();\n    }\n\n    async switchSubscribeStatus(titleId, titleType) {\n        if (titleId !== 0 && titleId !== undefined && titleType !== undefined) {\n            let resp = await fetch(sprintf(switchSubscribe, this.state.userId, titleId, titleType), {\n                method: 'POST',\n                body: this.state.urlData\n            });\n            let json = await resp.json();\n            return json;\n        } else {\n            console.log(\"switch parameters are wrong\")\n        }\n    }\n\n    async loadStatistic(minimumId) {\n        if (minimumId == undefined) {\n            minimumId = 0;\n        }\n        let resp = await fetch(sprintf(reqStatisticUrl, minimumId), {method: 'POST', body: this.state.urlData});\n        let json = await resp.json();\n        return json;\n    }\n\n\n    render() {\n        return (\n\n            <Root activeView=\"subTitle\">\n                <View id=\"subTitle\" activePanel={this.state.mode}>\n\n                    <Panel id=\"subscribe\">\n                        {this.state.loading && <PanelSpinner/>}\n                        <div id=\"subscribe_size\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}\n                                client={this.state.clientType}/>\n\n                        {this.state.subscribeTitles.map(item => (\n                            (this.state.clientType !== 'desktop_web') ?\n                                <SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)} key={\"sub_\"+item.anime_id}  resize={this.resizeVkIframe} /> :\n                                <SubscribeBlock anime={item} switch={this.switchSubscribeStatus.bind(this)} key={\"sub_\"+item.anime_id}  resize={this.resizeVkIframe} />\n\n                        ))}\n                        </div>\n\n                    </Panel>\n                    <Panel id=\"statistic_full\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"0\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode} resize={this.resizeVkIframe}/>\n                    </Panel>\n                    <Panel id=\"statistic_cur\">\n                        <Header rights={this.state.rights} mode={this.state.mode} select={this.selectScreen}/>\n                        <StatisticBlock minimumId=\"835\" loader={this.loadStatistic.bind(this)}\n                                        client={this.state.clientType} mode={this.state.mode} resize={this.resizeVkIframe}/>\n                    </Panel>\n\n                </View>\n            </Root>\n\n\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\nimport unregister from './sw'\n\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n\n        default:\n            console.log(e.detail.type);\n    }\n});\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n//registerServiceWorker();\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}